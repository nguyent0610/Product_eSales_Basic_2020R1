@using Ext.Net;
@using Ext.Net.MVC;
@using HQ.eSkyFramework
@using HQ.eSkyFramework.HQControl;
@using OM10100;

@{
    Layout = null;
    var X = Html.X();
    var HQ = Html.HQ();
}

@(
 X.Store()
    .ID("stoChoice")
    .AutoLoad(false)
    .Model(Util.GenerateModel(typeof(OM10100.Controllers.OM10100Controller.DiscountChoice), "mdlChoice", ""))
)
@(
 X.Store()
    .ID("stoChoiceHeader")
    .AutoLoad(false)
    .Model(Util.GenerateModel(typeof(OM10100.Controllers.OM10100Controller.DiscountChoiceHeader), "mdlChoiceHeader", ""))
)

@(
    X.Store().ID("stoOrder")
    .Model(Util.GenerateModel(typeof(OM10100_pcOrder_Result),"mdlOrder","OrderNbr")).PageSize(20)
    .Proxy(
        X.AjaxProxy()
            .Url(Url.Action("GetOrder", "OM10100")).Timeout(int.MaxValue)
        .ActionMethods(action => { action.Read = HttpMethod.POST; }).Timeout(int.MaxValue)
        .Reader(X.JsonReader().Root("data")))
    .Listeners(p =>
    {
        p.Load.Fn = "stoOrder_Load";
    })
    .Parameters(ps => { 
        ps.Add(new StoreParameter("orderType", "App.cboOrderType.getValue()", ParameterMode.Raw));
        ps.Add(new StoreParameter("branchID", "App.txtBranchID.getValue()", ParameterMode.Raw));
        ps.Add(new StoreParameter("query", "App.cboOrderNbr.rawValue", ParameterMode.Raw)); 
    })
)

@(
    X.Store().ID("stoShipToID")
    .AutoLoad(false)
    .Model(Util.GenerateModel(typeof(OM10100_pcShipToId_Result),"mdlShipToID",""))
    .Proxy(
        X.AjaxProxy()
            .Url(Url.Action("GetShipToID", "OM10100")).Timeout(int.MaxValue)
        .ActionMethods(action => { action.Read = HttpMethod.POST; })
        .Reader(X.JsonReader().Root("data")))
)

@(
    X.Store().ID("stoItemSite")
    .AutoLoad(false)
    .Model(Util.GenerateModel(typeof (OM10100_pdItemSite_Result),"mdlItemSite",""))
    .Proxy(
        X.AjaxProxy()
            .Url(Url.Action("GetItemSite", "OM10100")).Timeout(int.MaxValue)
        .ActionMethods(action => { action.Read = HttpMethod.POST; })
        .Reader(X.JsonReader().Root("data")))
)
@(
 X.Store().ID("stoItemSiteChoice")
    .AutoLoad(false)
    .Model(Util.GenerateModel(typeof(OM10100_pdItemSite_Result), "mdlItemSiteChoice", ""))
    .Proxy(
        X.AjaxProxy()
            .Url(Url.Action("GetItemSite", "OM10100")).Timeout(int.MaxValue)
        .ActionMethods(action => { action.Read = HttpMethod.POST; })
        .Reader(X.JsonReader().Root("data")))
)

@(
    X.Store().ID("stoInvt")
    .AutoLoad(false)
    .Model(Util.GenerateModel(typeof(OM10100_pcInvt_Result),"mdlInvt",""))
    .Proxy(
        X.AjaxProxy()
            .Url(Url.Action("GetInvt", "OM10100")).Timeout(int.MaxValue)
        .ActionMethods(action => { action.Read = HttpMethod.POST; })
        .Reader(X.JsonReader().Root("data")))
    .Parameters(ps => { 
        ps.Add(new StoreParameter("branchID", "App.txtBranchID.getValue()", ParameterMode.Raw)); 
    })
)

@(
    X.Store().ID("stoPrice")
    .AutoLoad(false)
    .Model(Util.GenerateModel(typeof(OM10100_pdSOPrice_Result),"mdlPrice",""))
    .Proxy(
        X.AjaxProxy()
        .Url(Url.Action("GetPrice", "OM10100")).Timeout(int.MaxValue)
        .ActionMethods(action => action.Read = HttpMethod.POST)
        .Reader(X.JsonReader().Root("data"))
    )
)

@(
    X.Store().ID("stoDisc")
    .AutoLoad(false)
    .Model(Util.GenerateModel(typeof(OM10100_pcDiscCode_Result),"mdlDisc",""))
    .Proxy(
        X.AjaxProxy()
        .Url(Url.Action("GetDiscCode", "OM10100")).Timeout(int.MaxValue)
        .ActionMethods(action => action.Read = HttpMethod.POST)
        .Reader(X.JsonReader().Root("data"))
    )
)

@(
    X.Store().ID("stoCustomer")
    .AutoLoad(false)
    .Model(Util.GenerateModel(typeof(AR_Customer),"mdlCustomer","CustId"))
    .Proxy(
        X.AjaxProxy()
            .Url(Url.Action("GetCustomer", "OM10100")).Timeout(int.MaxValue)
        .ActionMethods(action => action.Read = HttpMethod.POST )
        .Reader(X.JsonReader().Root("data"))
    )
)

@(
    X.Store().ID("stoSOAddress")
    .AutoLoad(false)
    .Model(Util.GenerateModel(typeof(AR_SOAddress),"mdlSOAddress",""))
    .Proxy(
        X.AjaxProxy()
            .Url(Url.Action("GetSOAddress", "OM10100")).Timeout(int.MaxValue)
        .ActionMethods(action => action.Read = HttpMethod.POST )
        .Reader(X.JsonReader().Root("data"))
    )
)

@(
    X.Store().ID("stoOrdDet")
    .AutoLoad(false)
    .PageSize(50)
    .Model(Util.GenerateModel(typeof(OM10100_pgOrderDet_Result),"mdlOrdDet",""))
    .Proxy(
        X.AjaxProxy()
            .Url(Url.Action("GetOrdDet", "OM10100")).Timeout(int.MaxValue)
        .ActionMethods(action => action.Read = HttpMethod.POST ).Timeout(int.MaxValue)
        .Reader(X.JsonReader().Root("data"))
    )
    .Parameters(ps => { 
        ps.Add(new StoreParameter("orderNbr", "App.cboOrderNbr.getValue()", ParameterMode.Raw));
        ps.Add(new StoreParameter("branchID", "App.txtBranchID.getValue()", ParameterMode.Raw)); 
    })
    .Listeners(p =>
    {
        p.Load.Fn = "stoDetail_Load";
        p.BeforeLoad.Fn = "stoOrdDet_BeforeLoad";                                    
    })                                     
)

@(
    X.Store().ID("stoOldOrdDet")
    .AutoLoad(false)
    .Model(Util.GenerateModel(typeof(OM10100_pgOrderDet_Result),"mdlOldOrdDet",""))
    .Proxy(
        X.AjaxProxy()
            .Url(Url.Action("GetOrdDet", "OM10100")).Timeout(int.MaxValue)
        .ActionMethods(action => action.Read = HttpMethod.POST )
        .Reader(X.JsonReader().Root("data"))
    )                               
)

@(
    X.Store().ID("stoTaxTrans")
    .AutoLoad(false)
    .Model(Util.GenerateModel(typeof (OM10100_pgTaxTrans_Result), "mdlTaxTrans", ""))        
    .Proxy(
        X.AjaxProxy()
            .Url(Url.Action("GetTaxTrans", "OM10100")).Timeout(int.MaxValue)
        .ActionMethods(action => action.Read = HttpMethod.POST )
        .Reader(X.JsonReader().Root("data"))
    )
    .Parameters(ps => { 
        ps.Add(new StoreParameter("orderNbr", "App.cboOrderNbr.getValue()", ParameterMode.Raw));
        ps.Add(new StoreParameter("branchID", "App.txtBranchID.getValue()", ParameterMode.Raw)); 
    })                                  
    .Listeners(p => {
        p.Load.Fn = "stoDetail_Load";
        p.BeforeLoad.Fn = "stoTaxTrans_BeforeLoad";
    })                                        
)

@(
    X.Store().ID("stoTax")
    .AutoLoad(false)
    .Model(Util.GenerateModel(typeof (OM10100_pcTax_Result), "mdlTax", ""))        
    .Proxy(
        X.AjaxProxy()
            .Url(Url.Action("GetTax", "OM10100")).Timeout(int.MaxValue)
        .ActionMethods(action => action.Read = HttpMethod.POST )
        .Reader(X.JsonReader().Root("data"))
    )
    .Parameters(ps => { 
        ps.Add(new StoreParameter("branchID", "App.txtBranchID.getValue()", ParameterMode.Raw)); 
    })                                                                    
)

@(
    X.Store().ID("stoTaxDoc")
    .AutoLoad(false)
    .Model(Util.GenerateModel(typeof (OM10100_pgTaxTrans_Result), "mdlTaxDoc", ""))                                            
)

@(
    X.Store()
    .ID("stoUnitConversion")
    .AutoLoad(false)
    .Model(Util.GenerateModel(typeof (OM10100_pcUnitConversion_Result),"mdlUnitConversion", ""))
    .Proxy(
        X.AjaxProxy()
            .Url(Url.Action("GetUnitConversion", "OM10100")).Timeout(int.MaxValue)
        .ActionMethods(action => action.Read = HttpMethod.POST )
        .Reader(X.JsonReader().Root("data"))
    )
    .Parameters(ps => { 
        ps.Add(new StoreParameter("branchID", "App.txtBranchID.getValue()", ParameterMode.Raw)); 
    })  
)
@*@(
    X.Store()
    .ID("stoUnit")
    .AutoLoad(false)
    .Model(Util.GenerateModel(typeof (OM10100_pcUnitConversion_Result),"mdlUnit", ""))
)*@
 @(X.Store()
            .ID("stoUnit")
            .AutoLoad(false)
            .Model(
                X.Model().Fields(
                    new ModelField() { Name = "FromUnit", Type = ModelFieldType.String }                  
                ).ID("mdlUnit")
            )
        )          
 @(X.Store()
    .ID("stoPOSMID")
    .AutoLoad(false)
    .Model(
        X.Model().Fields(
            new ModelField() { Name = "POSMID", Type = ModelFieldType.String }                  
        ).ID("mdlPOSMID")
    )
)               
@(
    X.Store()
    .ID("stoBKReasonCode")
    .AutoLoad(false)
    .Model(Util.GenerateModel(typeof (OM10100_pcReasonCode_Result),"mdlReasonCode", ""))
)

@(
    X.Store()
    .ID("stoBKOrderType")
    .AutoLoad(false)
    .Model(Util.GenerateModel(typeof (OM10100_pcOrderType_Result),"mdlOrderType", ""))
)

@(
    X.Store().ID("stoOrdDisc")
    .AutoLoad(false)
    .Model(Util.GenerateModel(typeof (OM_OrdDisc), "mdlOrdDisc", ""))
    .Proxy(
        X.AjaxProxy()
            .Url(Url.Action("GetOrdDisc", "OM10100")).Timeout(int.MaxValue)
        .ActionMethods(action => action.Read = HttpMethod.POST )
        .Reader(X.JsonReader().Root("data"))
    )
    .Parameters(ps => { 
        ps.Add(new StoreParameter("orderNbr", "App.cboOrderNbr.getValue()", ParameterMode.Raw));
        ps.Add(new StoreParameter("branchID", "App.txtBranchID.getValue()", ParameterMode.Raw)); 
    })        
    .Listeners(p =>
    {
        p.Load.Fn = "stoDetail_Load";
        p.BeforeLoad.Fn = "stoOrdDisc_BeforeLoad";
    })
) 
@(X.Store().ID("stoOldOrdDisc")
    .AutoLoad(false)
    .Model(Util.GenerateModel(typeof(OM_OrdDisc), "mdlOldOrdDisc", ""))
    .Proxy(
        X.AjaxProxy()
            .Url(Url.Action("GetOrdDisc", "OM10100")).Timeout(int.MaxValue)
        .ActionMethods(action => action.Read = HttpMethod.POST)
        .Reader(X.JsonReader().Root("data"))
    )
)
 
@(
    X.Store().ID("stoOrdAddr")
    .AutoLoad(false)
    .Model(Util.GenerateModel(typeof (OM_OrdAddr),"mdlOrdAddr", ""))
    .Proxy(
        X.AjaxProxy()
            .Url(Url.Action("GetOrdAddr", "OM10100")).Timeout(int.MaxValue)
        .ActionMethods(action => action.Read = HttpMethod.POST )
        .Reader(X.JsonReader().Root("data"))
    )
    .Parameters(ps => { 
        ps.Add(new StoreParameter("orderNbr", "App.cboOrderNbr.getValue()", ParameterMode.Raw));
        ps.Add(new StoreParameter("branchID", "App.txtBranchID.getValue()", ParameterMode.Raw)); 
    }) 
    .Listeners(p => {
        p.Load.Fn = "stoDetail_Load";
    })
)
   
@(
    X.Store()
    .ID("stoUserDefault")
    .AutoLoad(false)
    .Model(Util.GenerateModel(typeof (OM10100_pdOM_UserDefault_Result),"mdlUserDefault",""))
    .Proxy(
        X.AjaxProxy()
            .Url(Url.Action("GetUserDefault", "OM10100")).Timeout(int.MaxValue)
        .ActionMethods(action => action.Read = HttpMethod.POST)
        .Reader(X.JsonReader().Root("data"))
    )
    .Parameters(ps => {
        ps.Add(new StoreParameter("branchID", "App.txtBranchID.getValue()", ParameterMode.Raw));
        ps.Add(new StoreParameter("slsperID", "App.cboSlsPerID.getValue()", ParameterMode.Raw));
        ps.Add(new StoreParameter("orderType", "App.cboOrderType.getValue()", ParameterMode.Raw));
        ps.Add(new StoreParameter("orderDate", "App.txtOrderDate.getValue()", ParameterMode.Raw)); 
    })
)

@(
    X.Store()
    .ID("stoINSetup")
    .AutoLoad(false)
    .Model(Util.GenerateModel(typeof (IN_Setup),"mdlINSetup",""))
    .Proxy(
        X.AjaxProxy()
            .Url(Url.Action("GetINSetup", "OM10100")).Timeout(int.MaxValue)
        .ActionMethods(action => action.Read = HttpMethod.POST)
        .Reader(X.JsonReader().Root("data"))
    )
    .Parameters(ps => {
        ps.Add(new StoreParameter("branchID", "App.txtBranchID.getValue()", ParameterMode.Raw)); 
    }) 
)   
    
    
@(
    X.Store()
    .ID("stoOMSetup")
    .AutoLoad(false)
    .Model(Util.GenerateModel(typeof (OM_Setup),"mdlOMSetup",""))
    .Proxy(
        X.AjaxProxy()
            .Url(Url.Action("GetOMSetup", "OM10100")).Timeout(int.MaxValue)
        .ActionMethods(action => action.Read = HttpMethod.POST)
        .Reader(X.JsonReader().Root("data"))
    )
)   

@(
    X.Store()
    .ID("stoCalcLot")
    .AutoLoad(false)
    .Model(Util.GenerateModel(typeof(OM10100_pcLotSerNbr_Result), "mdlCalcLot", ""))
    .Proxy(
        X.AjaxProxy()
            .Url(Url.Action("GetLot", "OM10100")).Timeout(int.MaxValue)
        .ActionMethods(action => action.Read = HttpMethod.POST)
        .Reader(X.JsonReader().Root("data"))
    )
)


@(
    X.Store()
    .ID("stoLotTrans")
    .AutoLoad(false)
    .Model(Util.GenerateModel(typeof (OM_LotTrans),"mdlLotTrans","",true))
    .Proxy(
        X.AjaxProxy()
            .Url(Url.Action("GetLotTrans", "OM10100")).Timeout(int.MaxValue)
        .ActionMethods(action => action.Read = HttpMethod.POST)
        .Reader(X.JsonReader().Root("data"))
    )
    .Listeners(p =>
    {
        p.Load.Fn = "stoDetail_Load";                                 
    }) 
    .Parameters(ps => { 
        ps.Add(new StoreParameter("orderNbr", "App.cboOrderNbr.getValue()", ParameterMode.Raw));
        ps.Add(new StoreParameter("branchID", "App.txtBranchID.getValue()", ParameterMode.Raw)); 
    })
)

@(
    X.Store()
    .ID("stoOldLotTrans")
    .AutoLoad(false)
    .Model(Util.GenerateModel(typeof (OM_LotTrans),"mdlOldLotTrans","",true))
    .Proxy(
        X.AjaxProxy()
            .Url(Url.Action("GetLotTrans", "OM10100")).Timeout(int.MaxValue)
        .ActionMethods(action => action.Read = HttpMethod.POST)
        .Reader(X.JsonReader().Root("data"))
    )
)

@(
    X.Store()
    .ID("stoItemLot")
    .AutoLoad(false)
    .Model(Util.GenerateModel(typeof (IN_ItemLot),"mdlItemLot",""))
    .Proxy(
        X.AjaxProxy()
            .Url(Url.Action("GetItemLot", "OM10100")).Timeout(int.MaxValue)
        .ActionMethods(action => action.Read = HttpMethod.POST)
        .Reader(X.JsonReader().Root("data"))
    )
)

@(
 X.Store()
    .ID("stoRewardAmtReturn")
    .AutoLoad(false)
    .Model(Util.GenerateModel(typeof(OM10100_pdRewardAmt4Return_Result), "mdlRewardAmtReturn", "", true))
    .Proxy(
        X.AjaxProxy()
            .Url(Url.Action("GetRewardAmtReturn", "OM10100")).Timeout(int.MaxValue)
        .ActionMethods(action => action.Read = HttpMethod.POST)
        .Reader(X.JsonReader().Root("data"))
    )
    //.Listeners(p =>
    //{
    //    p.Load.Fn = "stoDetail_Load";
    //})
    .Parameters(ps =>
    {
        ps.Add(new StoreParameter("orderNbr", "App.cboBKOrderNbr.getValue()", ParameterMode.Raw));
        ps.Add(new StoreParameter("branchID", "App.txtBranchID.getValue()", ParameterMode.Raw));
    })
)

@(
 X.Store().ID("stoEditDetail")
            .AutoLoad(false)
            .Model(Util.GenerateModel(typeof(OM10100_pgGift_Result), "mdlDetail", ""))
            .Proxy(
                X.AjaxProxy()
                .Url(Url.Action("GetOrdGift", "OM10100")).Timeout(int.MaxValue)
                .ActionMethods(action => action.Read = HttpMethod.POST)
                .Reader(X.JsonReader().Root("data"))
            )
            .Parameters(ps =>
            {
                ps.Add(new StoreParameter("orderNbr", "App.cboOrderNbr.getValue()", ParameterMode.Raw));
                ps.Add(new StoreParameter("branchID", "App.txtBranchID.getValue()", ParameterMode.Raw));
            })
)
@(HQ.Store().ID("stoCodeProgram").HQProcedure("OM10100_pcCodeProgram").HQDBSys(false).AutoLoad(true)
            .HQParam(new StoreParameterCollection() {
                            new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw}
            }).LoadData())

@(HQ.Store().ID("stoOM10100_pdDocBal").HQProcedure("OM10100_pdDocBal").HQDBSys(false).AutoLoad(true)
            .HQParam(new StoreParameterCollection() {
                new StoreParameter() { Name = "@OrdNbr", Value = "_ordNbr", Mode = ParameterMode.Raw},
                new StoreParameter() { Name = "@BranchID", Value = "App.txtBranchID.getValue()", Mode = ParameterMode.Raw},
                new StoreParameter() { Name = "@UserName", Value = "HQ.userName", Mode = ParameterMode.Raw},
                new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw}
            })
            .Listeners(l =>
            {
                l.Load.Fn = "stoOM10100_pdDocBal_Load";
            })
            .LoadData()
)
@(HQ.Store().ID("stoOM10100_pdInvtMark").HQProcedure("OM10100_pdInvtMark").HQDBSys(false).AutoLoad(true)
                .HQParam(new StoreParameterCollection() {
                    new StoreParameter() { Name = "@BranchID", Value = "App.txtBranchID.getValue()", Mode = ParameterMode.Raw},
                    new StoreParameter() { Name = "@UserID", Value = "HQ.userName", Mode = ParameterMode.Raw},
                    new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw},
                    new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw}
                })
                .Listeners(l =>
                {
                    //l.Load.Fn = "stoOM10100_pdDocBal_Load";
                })
                .LoadData()
)
@(
 X.Viewport()
    .Layout(LayoutType.Fit)
    .Items(

        X.Window().ID("winReport").Title("Report")
         .Listeners(l =>
            {
                l.Show.Handler = "App.frmMain.mask();";
                l.Hide.Handler = "App.frmMain.unmask();";
                l.Close.Handler = "App.frmMain.unmask();";
            })
        .Hidden(true)
        .Resizable(false)
        .Width(350)
        .Items(
                HQ.Combo().ID("cboReport")
                .MarginSpec("10 0 10 20").LabelWidth(70)
                .Width(300).ForceSelection(true)
                .FieldLabel(Util.GetLangJS("Report"))
                .DisplayField("ReportName").ValueField("Code")
                .HQProcedure("OM10100_pcReport").HQColumnShow("ReportNbr,ReportCap,ReportName")
                .ForceSelection(true).HQisPaging(true).PageSize(20)
                .HQHeightWidth(400, 500)
                .HQParam(new StoreParameterCollection(){
                    new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                    new StoreParameter() { Name = "@UserName", Value = "HQ.userName", Mode = ParameterMode.Raw },
                    new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                })
                .LoadData()
            )
            .Buttons(
                X.Button().ID("btnShowReport").Text(Util.GetLangJS("Preview"))
                .Listeners(p => p.Click.Fn = "btnShowReport_Click")

                , X.Button().ID("btnCloseReport").Text(Util.GetLangJS("Closed"))
                .Listeners(p => p.Click.Handler = "App.winReport.close()")
        )

        , X.Window().ID("winNote").Title("Note")
        .Hidden(true)
            .Listeners(l =>
            {
                l.Show.Handler = "App.frmMain.mask();";
                l.Hide.Handler = "App.frmMain.unmask();";
                l.Close.Handler = "App.frmMain.unmask();";
            })
        .Resizable(false)
        .Width(500)
        .Height(300)
        .Items(
            X.TextArea().ID("txtNote").Width(500).Shadow(false)
            .Height(300)
        )
        .Buttons(
            X.Button().ID("btnNoteOK").Text(Util.GetLangJS("Ok"))
            .Listeners(p => p.Click.Fn = "btnNoteOK_Click")
        )

        , X.Window().ID("winBackOrder").Title("BackOrder")
        .Hidden(true)
        .Listeners(l =>
        {
            l.Show.Handler = "App.frmMain.mask();";
            l.Hide.Handler = "App.frmMain.unmask();";
            l.Close.Handler = "App.frmMain.unmask();";
        })
        .Resizable(false)
        .Width(350)
        .Items(
                    HQ.Combo().ID("cboBKOrderType").FieldLabel(Util.GetLangJS("OrderType"))
                        .SubmitValue(false).HQColumnShow("OrderType,Descr").HQHeightWidth(400, 300)
                        .MarginSpec("10 0 0 20").HQProcedure("OM10100_pcBackOrderType")
                        .DisplayField("Descr").ValueField("OrderType")
                        .LabelWidth(80).Width(300).HQAutoLoad(true)
                        .LabelAlign(LabelAlign.Right)
                        .AllowBlank(false).BlankText(Util.GetLangPrefix("Input", "OrderType"))
                        .ForceSelection(true)
                        .Listeners(p =>
                        {
                            p.Change.Fn = "cboBKOrderType_Change";
                        })
                        .HQParam(new StoreParameterCollection(){
                        new StoreParameter() { Name = "@BranchID", Value = "App.txtBranchID.getValue()", Mode = ParameterMode.Raw },
                        new StoreParameter() { Name = "@UserName", Value = "HQ.userName", Mode = ParameterMode.Raw },
                        new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                    })
                        .LoadData()

                    , X.ComboBox().ID("cboBKReasonCode").FieldLabel(Util.GetLangJS("ReasonCD"))
                    .SubmitValue(false)
                    .LabelAlign(LabelAlign.Right)
                    .ListConfig(Util.HQBoundList("Code,Descr", 400, 300)).MarginSpec("5 0 0 20")
                    .DisplayField("Descr").ValueField("Code")
                    .LabelWidth(80).Width(300)
                    .ForceSelection(true).AllowBlank(false)
                    .StoreID("stoBKReasonCode")

                    , HQ.Combo().ID("cboBKOrderNbr").HQLangCodeJS("OrderNbr")
                    .HQAutoLoad(false)
                    .MarginSpec("5 0 10 20")
                    .HQProcedure("OM10100_pcBackOrder").HQColumnShow("OrderNbr,CustID,SlsPerID,OrderDate")
                    .DisplayField("OrderNbr").ValueField("OrderNbr")
                    .LabelWidth(80).Width(300).HQHeightWidth(400, 300)
                    .AllowBlank(false).BlankText(Util.GetLangPrefix("Select", "OrderNbr"))
                    .ForceSelection(true).EnforceMaxLength(true)
                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    .HQParam(new StoreParameterCollection(){
                        new StoreParameter() { Name = "@BranchID", Value = "App.txtBranchID.getValue()", Mode = ParameterMode.Raw },
                        new StoreParameter() { Name = "@OrderType", Value = "App.cboBKOrderType.getValue()", Mode = ParameterMode.Raw },
                        new StoreParameter() { Name = "@CustID", Value = "App.cboCustID.getValue()", Mode = ParameterMode.Raw },
                        new StoreParameter() { Name = "@UserName", Value = "HQ.userName", Mode = ParameterMode.Raw },
                        new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                        new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                    })
                    .LoadData()


            )
            .Buttons(
                X.Button().ID("btnBKOk").Text(Util.GetLangJS("OK"))
                .Listeners(p => p.Click.Fn = "btnBKOk_Click")
        )

        , X.Window()
        .ID("winLot")
        .Hidden(true)
        .Layout(LayoutType.Fit)
        .Height(300)
        .Width(550)
        .Modal(true)
        .Closable(false)
        .Buttons(
            X.Button().ID("btnLotDel").Text(Util.GetLangJS("DeleteRights"))
            .Listeners(p => p.Click.Fn = "btnLotDel_Click")

            , X.Button().ID("btnLotOK").Text(Util.GetLangJS("OK"))
            .Listeners(p => p.Click.Fn = "btnLotOK_Click")
        )
        .BottomBar(
            X.Toolbar()
            .Border(false)
            .Items(
                X.Label().ID("lblLotQtyAvail").Width(350).MarginSpec("0 5 0 5").StyleSpec("text-align:left;")
            )
        )
        .Items(
            X.GridPanel().ID("grdLot")
            .Border(true).BorderSpec("1 0 0 0")
            .StoreID("stoLotTrans")
            .ColumnModel(
                X.RowNumbererColumn().Renderer("renderRowNumber")

                , X.Column().ID("colLotSerNbr").DataIndex("LotSerNbr").Text(Util.GetLangJS("LotSerNbr"))
                .Editor(
                    X.ComboBox().ID("cboLotSerNbr").DataIndex("LotSerNbr")
                    .ValueField("LotSerNbr").DisplayField("LotSerNbr")
                    .SubmitValue(false)
                    .MinChars(1).TypeAhead(false).ForceSelection(true)
                    .TriggerAction(TriggerAction.All)
                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    .Listeners(l =>
                    {
                        //l.Change.Fn = "cboLotSerNbr_Change";
                        l.Focus.Handler = "HQ.focus='lot'";
                        l.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                    })
                    .QueryMode(DataLoadMode.Local)
                    .MatchFieldWidth(false)
                    .ListConfig(X.BoundList()
                        .Height(500)
                        .ItemSelector(".x-boundlist-item").LoadingText(Util.GetLangJS("Loading"))
                        .Tpl(
                            X.XTemplate()
                            .Html(@"<tpl for='.'>
                                        <tpl if='[xindex] == 1'>
                                            <table style='width:300px !important'>
                                                <tr>
                                                    <th>" + Util.GetLangJS("LotSerNbr") + @"</th>
                                                    <th>" + Util.GetLangJS("ExpDate") + @"</th>
                                                    <th>" + Util.GetLangJS("QtyAvail") + @"</th>
                                                </tr>
                                        </tpl>
                                        <tr class='x-boundlist-item'>
                                            <td style='width:110px;'>{LotSerNbr}</td>
                                            <td>{ExpDate:date(""m-d-Y"")}</td>
                                            <td>{QtyCnvFact:number(""###,###.0"")}</td>
                                        </tr>
                                        <tpl if='[xcount-xindex] == 0'>
                                            </table>
                                        </tpl>
                                    </tpl>"
                                    )
                        )
                    )
                    .StoreID("stoCalcLot")
                )
                .Width(120)


                , X.Column().ID("colLotUnitDesc").DataIndex("UnitDesc").Text(Util.GetLangJS("Unit"))
                .Width(100)
                .Editor(
                    X.ComboBox().ID("cboLotUnitDesc")
                    .DisplayField("FromUnit").ValueField("FromUnit")
                    .StoreID("stoUnit")
                    .QueryMode(DataLoadMode.Local)
                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    .Listeners(lst =>
                    {
                        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                    })
                )

                 , X.Column().ID("colLotQty").DataIndex("Qty").Text(Util.GetLangJS("Qty"))
                .Width(75)
                .Align(Alignment.Right).StyleSpec("text-align:left")
                .Renderer("renderQtyAmt")
                .Editor(Html.X().NumberField().MinValue(0).DecimalPrecision(0))


                , X.Column().ID("colLotPrice").DataIndex("UnitPrice").Text(Util.GetLangJS("Price"))
                .Width(75)
                .Align(Alignment.Right).StyleSpec("text-align:left")
                .Renderer("renderQtyAmt")

                , X.DateColumn().ID("ExpDate").DataIndex("ExpDate").Text(Util.GetLangJS("ExpDate"))
            )
            .Listeners(lst =>
            {
                lst.Select.Handler = "HQ.focus='lot';";
                lst.Edit.Fn = "grdLot_Edit";
                lst.BeforeEdit.Fn = "grdLot_BeforeEdit";
                lst.SelectionChange.Fn = "grdLot_SelectionChange";
                lst.ValidateEdit.Fn = "grdLot_ValidateEdit";
            })
            .SelectionModel(Html.X().RowSelectionModel().ID("smlLot").Mode(SelectionMode.Single))
            .View(X.GridView().TrackOver(false))
            .Plugins(X.CellEditing().ClicksToEdit(1))
        )

        , X.Window()
        .ID("winChoice")
        .Hidden(true)
        .Layout(LayoutType.Border)
        .Height(500)
        .Width(900)
        .Modal(true)
        .Closable(true)
            .Listeners(p =>
            {
                p.Hide.Fn = "winChoice_Close";
                p.Close.Fn = "winChoice_Close";
            })
        //.Buttons(
        //    X.Button().ID("btnChoiceOk").Text(Util.GetLangJS("OK"))
        //        .Listeners(p => p.Click.Fn = "btnChoiceOk_Click")
        //)
        .BottomBar(
                X.Toolbar().ID("bottomBar")
            .Border(false)
            .Items(
                X.Container().ID("ctnBottomBar")
                .Items(
                    X.Label().ID("lblChoiceQtyAvail").Width(400).MarginSpec("0 0 0 5").StyleSpec("style='float: left;width: 400px;font-weight: bold;'"),
                    
                    X.Label().ID("lblChoiceAmtUsed").MarginSpec("0 0 0 5").StyleSpec("style='float: left;width: 300px;font-weight: bold;'")

                    , X.Button().ID("btnChoiceOk").Text(Util.GetLangJS("OK"))
                    .Listeners(p => p.Click.Fn = "btnChoiceOk_Click")
                    .StyleSpec("style='float: right;width: 100px;font-weight: bold; margin-right: 10px;'")
                )
            )
        )
        .Items(
            X.Panel()
            .Border(false)
            .Split(true)
            .Flex(5)
            .Region(Region.North)
            .Layout(LayoutType.Fit)
            .Items(
                X.GridPanel().ID("grdChoiceHeader")
                .Title(Util.GetLangJS("OM10100ChoiceHeader"))
                .Border(true).BorderSpec("1 0 0 0")
                .StoreID("stoChoiceHeader")
                .ColumnModel(
                    X.RowNumbererColumn()
                    , X.Column().DataIndex("DiscID").Text(Util.GetLangJS("DiscID")).Width(100)
                    , X.Column().DataIndex("DiscSeq").Text(Util.GetLangJS("DiscSeq")).Width(140)
                    , X.Column().DataIndex("DiscDescr").Text(Util.GetLangJS("DiscDescr")).Width(200)
                    , X.NumberColumn().DataIndex("MaxQty").Text(Util.GetLangJS("OM10100MaxQty")).Width(110).Format("0,000").Renderer("rendererMaxQty").Align(Alignment.Right).StyleSpec("text-align:right")
                    //, X.NumberColumn().DataIndex("PromoBonusAmt").Text(Util.GetLangJS("OM10100PromoAmt")).Width(110).Format("0,000").Align(Alignment.Right).StyleSpec("text-align:right")
                    , X.NumberColumn().DataIndex("LevelID").Text(Util.GetLangJS("OM10100LevelID")).Width(70).Format("0,000").Align(Alignment.Right).StyleSpec("text-align:right")
                    , X.Column().DataIndex("InvtID").Text(Util.GetLangJS("InvtID")).Width(120)
                    , X.Column().DataIndex("Descr").Text(Util.GetLangJS("Descr")).Width(120)
                    , X.Column().DataIndex("Unit").Text(Util.GetLangJS("Unit")).Width(70)
                    //, X.CheckColumn().DataIndex("DonateGroupProduct").Text(Util.GetLangJS("DonateGroupProduct")).Width(150)
                )
                .SelectionModel(Html.X().RowSelectionModel().ID("smlChoiceHeader").Mode(SelectionMode.Single))
                .View(X.GridView().TrackOver(false))
                .Listeners(p =>
                {
                    p.SelectionChange.Fn = "grdChoiceHeader_SelectionChange";
                })
            ),

            X.Panel()
            .Border(false)
            .Flex(4)
            .Region(Region.Center)
            .Layout(LayoutType.Fit)
            .Items(
                X.GridPanel().ID("grdChoice")
                .Title(Util.GetLangJS("OM10100ChoiceDet"))
                .Border(true).BorderSpec("1 0 0 0")
                .StoreID("stoChoice")
                .ColumnModel(
                    X.RowNumbererColumn()
                    , X.CheckColumn().ID("colSel").DataIndex("Sel").Text("").Width(30).Editable(true).Filterable(false)//.Locked(true)
                    , X.Column().DataIndex("FreeItemID").Text(Util.GetLangJS("FreeItemID")).Width(110)//.Locked(true)
                    , X.Column().DataIndex("FreeItemDescr").Text(Util.GetLangJS("FreeItemDescr")).Width(180)
                    , X.Column().DataIndex("FreeItemUnit").Text(Util.GetLangJS("FreeItemUnit")).Width(100)

                    , X.NumberColumn().DataIndex("FreeItemQty").Text(Util.GetLangJS("SOSUAT")).ID("txtFreeItemQty")
                    .Width(100).Format("0,000.0")
                    .Align(Alignment.Right).StyleSpec("text-align:left")
                    .Renderer("renderQtyAmt1")
                    .Editor(HQ.NumberField().MinValue(0).DecimalPrecision(1).SpinUpEnabled(true))

                    , X.Column().DataIndex("MaxQtyInGroup").Text(Util.GetLangJS("MaxQtyInGroup")).Align(Alignment.Right).StyleSpec("text-align:right").ID("txtMaxQtyInGroup")
                    , X.NumberColumn().DataIndex("FreeItemQtyBase").Text(Util.GetLangJS("FreeItemQtyBase")).Align(Alignment.Right).StyleSpec("text-align:right").Format("0,000").Width(140)
                    , X.NumberColumn().DataIndex("TotQty").Text(Util.GetLangJS("FreeItemQty")).Align(Alignment.Right).StyleSpec("text-align:left").Format("0,000")
                    , X.Column().DataIndex("GroupItem").Text(Util.GetLangJS("GroupItem"))
                    , X.NumberColumn().DataIndex("Priority").Text(Util.GetLangJS("Priority")).Align(Alignment.Right).StyleSpec("text-align:right")
                    , X.NumberColumn().DataIndex("PromoPrice").Text(Util.GetLangJS("OM10100PromoPrice")).Align(Alignment.Right).StyleSpec("text-align:right").Format("0,000")
                    , X.NumberColumn().DataIndex("PromoLineAmt").Text(Util.GetLangJS("OM10100PromoLineAmt")).Align(Alignment.Right).StyleSpec("text-align:right").Format("0,000")
                )
                .Listeners(p =>
                {
                    p.Edit.Fn = "grdChoice_Edit";
                    //p.SelectionChange.Fn = "grdChoice_SelectionChange";
                })
                .SelectionModel(Html.X().RowSelectionModel().ID("smlChoice").Mode(SelectionMode.Single))
                .Listeners(lst =>
                {
                    lst.Select.Fn = "smlChoice_Select";
                })
                .View(X.GridView().TrackOver(false))
                .SortableColumns(true)
                .Plugins(
                    X.CellEditing().ClicksToEdit(1)
                )
            )
        )

       , X.Window().ID("winSearchBackOrder")
            .Title(Util.GetLangJS("OM10100BackOrder")).Hidden(true)
        .Resizable(true).Width(650)
        .MinWidth(300)
        .MinHeight(200)
        .Layout(LayoutType.Border)
        .DefaultButton("btnLoad")
        .Height(400)
        .Listeners(l =>
        {
            l.BeforeShow.Fn = "winSearchBackOrder_BeforeShow";
            l.Close.Handler = "App.frmMain.unmask();";
            l.Hide.Handler = "App.frmMain.unmask();";
        })
        .Items(
            X.Panel().Layout(LayoutType.Fit).Region(Region.North)
                .Items(
                    X.Container().Layout(LayoutType.VBox).Items(
                            X.Container().Layout(LayoutType.HBox).MarginSpec("5 0 0 0")
                        .Items(
                            HQ.Combo().ID("cboSearchSlsperID").HQLangCodeJS("SlsperID")
                            .HQProcedure("OM10100_pcSalesPerson").HQColumnShow("SlsperID,Name")
                            .DisplayField("Name").ValueField("SlsperID")
                            .LabelWidth(110).Width(310).HQHeightWidth(400, 300)
        // .AllowBlank(false)
                            .BlankText(Util.GetLangPrefix("Select", "SlsPerID"))
                            .ForceSelection(true)
                            .HQAutoLoad(false)
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .HQParam(new StoreParameterCollection(){
                                new StoreParameter() { Name = "@BranchID", Value = "App.txtBranchID.getValue()", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@OrderType", Value = "App.cboOrderType.getValue()", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@UserName", Value = "HQ.userName", Mode = ParameterMode.Raw }
                            })
                            .LoadData()
                            .Listeners(p =>
                            {
                                p.Change.Handler = "App.cboSearchCustID.setValue(''); App.cboSearchCustID.store.reload()";
                                p.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                p.Focus.Handler = "HQ.focus='order';";
                            })
                            ,
                            HQ.DateField().ID("dteFromDate")
                            .AllowBlank(false)
                            .Width(200)
                            .LabelWidth(70)
                            .HQLangCodeJS("FromDate").Format(Current.FormatDate)
                            .Listeners(l =>
                            {
                                l.Change.Fn = "dteFromDate_change";
                            })
                        ),

                        X.Container().Layout(LayoutType.HBox).MarginSpec("5 0 0 0")
                        .Items(
                            HQ.Combo().ID("cboSearchCustID").HQLangCodeJS("CustID")
                            .HQisPaging(true).PageSize(20).HQAutoLoad(false)
                            .HQProcedure("OM10100_pcSearchCustomer").HQColumnShow("CustID,CustName")
                            .DisplayField("CustName").ValueField("CustID")
                            .LabelWidth(110).Width(310).HQHeightWidth(400, 400)
        // .AllowBlank(false)
                           .BlankText(Util.GetLangPrefix("Select", "CustID"))
                            .ForceSelection(false).Tag("X")
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .HQParam(new StoreParameterCollection(){
                                new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@Username", Value = "HQ.userName", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw } ,
                                new StoreParameter() { Name = "@SlsperID", Value = "App.cboSearchSlsperID.getValue()", Mode = ParameterMode.Raw } ,
                                new StoreParameter() { Name = "@BranchID", Value = "App.txtBranchID.getValue()", Mode = ParameterMode.Raw }
                            })
                            .LoadData()
                            .Listeners(p =>
                            {
                                p.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                p.Focus.Handler = "HQ.focus='order';";
                            })

                            ,
                            HQ.DateField().ID("dteToDate")
                            .AllowBlank(false)
                            .Width(200)
                            .LabelWidth(70)
                            .HQLangCodeJS("ToDate").Format(Current.FormatDate)
                            ,

                            HQ.Button().ID("btnLoad")
                            .HQLangCodeJS("LoadData")
                            .Width(120)
                            .Icon(Icon.ArrowRefresh)
                            .MarginSpec("0 0 5 10")
                            .Listeners(l =>
                            {
                                l.Click.Fn = "btnLoad_Click";
                            })
                        )
                    )
                )
                , X.Panel().Layout(LayoutType.Fit).Region(Region.Center)
                .Items(
                    X.GridPanel().ID("grdBackOrder")
                    .Layout(LayoutType.Fit)
                    .Scroll(ScrollMode.Both)
                    .View(X.GridView().TrackOver(false))
                    .SortableColumns(true)
                    .Store(
                        X.Store()
                        .ID("stoSearchBackOrder")
                        .PageSize(30).AutoLoad(false)
                        .Model(Util.GenerateModel(typeof(OM10100_pgSearchBackOrder_Result), "mdlOM10100_pgSearchBackOrder", ""))
                        .ServerProxy(X.AjaxProxy().Url(Url.Action("GetSearchBackOrder")).Timeout(int.MaxValue))
                        .Parameters(ps =>
                        {
                            ps.Add(new StoreParameter("branchID", "App.txtBranchID.getValue()", ParameterMode.Raw));
                            ps.Add(new StoreParameter("slsperID", "App.cboSearchSlsperID.getValue()", ParameterMode.Raw));
                            ps.Add(new StoreParameter("custID", "App.cboSearchCustID.getValue()", ParameterMode.Raw));

                            ps.Add(new StoreParameter("fromDate", "App.dteFromDate.getValue()", ParameterMode.Raw));
                            ps.Add(new StoreParameter("toDate", "App.dteToDate.getValue()", ParameterMode.Raw));
                        })
                        .Listeners(l =>
                        {
                            l.BeforeLoad.Fn = "stoSearchBackOrder_BeforeLoad";
                            l.Load.Fn = "stoSearchBackOrder_Load";
                        })
                    )
                    .ColumnModel(
                        X.RowNumbererColumn().MinWidth(20).Width(30).MaxWidth(100).Listeners(x => x.AfterRender.Handler = "this.resizable = true")
                        , X.Column().Text(Util.GetLangJS("SlsperID")).DataIndex("SlsPerID").Width(100)
                        , X.Column().Text(Util.GetLangJS("SlsName")).DataIndex("SlsName").Width(120)
                        , X.Column().Text(Util.GetLangJS("CustID")).DataIndex("CustID").Width(110)
                        , X.Column().Text(Util.GetLangJS("CustName")).DataIndex("CustName").Width(120)
                        , X.Column().Text(Util.GetLangJS("OrderNbr")).DataIndex("OrderNbr").Width(100)
                        , X.NumberColumn().Text(Util.GetLangJS("TotAmt")).DataIndex("OrderAmt").Width(100).Format("0,000").StyleSpec("text-align:right").Align(Alignment.Right)
                        , X.DateColumn().Text(Util.GetLangJS("OrderDate")).DataIndex("OrderDate").Width(110).Format(Current.FormatDate)
                    )
                    .SelectionModel(
                        X.CheckboxSelectionModel().Mode(SelectionMode.Single).ShowHeaderCheckbox(false)
                    )
                        .Listeners(l => l.CellDblClick.Fn = "btnSearchBackOrderOK_click")
                    .BottomBar(
                        X.PagingToolbar()
                        .HideRefresh(true)
                        .Items(
                            X.Label(Util.GetLangJS("PageSize")),
                            X.ToolbarSpacer(10),
                            X.ComboBox()
                            .Width(80)
                            .Items("1", "2", "10", "20", "30", "50")
                            .SelectedItems("30")
                            .Listeners(l => l.Select.Fn = "HQ.grid.onPageSelect")
                        )
                        .Plugins(X.ProgressBarPager())
                    )
                    .Features(
                        X.GridFilters()
                        .Local(true)
                        .Filters(
                            X.StringFilter().DataIndex("SlsperID"),
                            X.StringFilter().DataIndex("SlsName"),
                            X.NumericFilter().DataIndex("TotAmt"),
                            X.StringFilter().DataIndex("CustID"),
                            X.StringFilter().DataIndex("CustName"),
                            X.StringFilter().DataIndex("OrderNbr"),
                            X.DateFilter().DataIndex("OrderDate")
                        )
                    )
                )
                , X.Container()
                .Region(Region.South)
                .Layout(LayoutType.HBox).MarginSpec("5 5 5 5")
                .LayoutConfig(new HBoxLayoutConfig { Align = HBoxAlign.Top, Pack = BoxPack.Center })
                .Items(
                    HQ.Button().ID("btnOK")
                    .HQLangCodeJS("OK").Icon(Icon.Disk).MinWidth(60)
                        .Handler("btnSearchBackOrderOK_click")

                    , HQ.Button()
                    .HQLangCodeJS("Close").Icon(Icon.ApplicationHome).MinWidth(60)
                    .MarginSpec("0 0 0 5")
                    .Handler("App.winSearchBackOrder.close();")
                ) // buttons
            )
            .Listeners(x =>
            {
                //  x.BoxReady.Handler = "HQ.common.control_render(this,'grdBranchRoute')";
            }),
            
              X.Window()
                .ID("winManualPromo")
                .Hidden(true)
                .Layout(LayoutType.Anchor)
                .Height(400)
                .Width(1000)
                .MinHeight(100)
                .MinWidth(150)
                .Modal(true)
                .Closable(true)
                .Buttons(
                    X.Button().ID("btnManualOk").Text(Util.GetLangJS("OK"))
                    .Listeners(p => p.Click.Fn = "PopupwinManualPromo.btnManualOk_Click")
                )
                .Items(
                    X.GridPanel().ID("grdManualPromo").MarginSpec("5 0 5 0")
                    .Border(true).BorderSpec("1 0 0 0").Anchor("100% -25")
                    .Store(
                        X.Store()
                            .ID("stoManualPromo")
                        .PageSize(50)
                        .Model(Util.GenerateModel(typeof(OM10100_pgManualPromo_Result), "mdlManualPromo", ""))
                        .Parameters(ps =>
                        {
                            ps.Add(new StoreParameter("branchID", "App.txtBranchID.getValue()", ParameterMode.Raw));
                            ps.Add(new StoreParameter("slsperID", "App.cboSlsPerID.getValue()", ParameterMode.Raw));
                            ps.Add(new StoreParameter("custID", "App.cboCustID.getValue()", ParameterMode.Raw));
                            ps.Add(new StoreParameter("orderDate", "App.txtOrderDate.getValue()", ParameterMode.Raw));
                            ps.Add(new StoreParameter("totalAmt", "_totalAmt", ParameterMode.Raw));
                            ps.Add(new StoreParameter("orderNbr", "App.cboOrderNbr.getValue()", ParameterMode.Raw));
                        })
                        .ServerProxy(X.AjaxProxy().Url(Url.Action("GetManualPromo"))).AutoLoad(false)
                        .Listeners(l =>
                        {
                            l.Load.Fn = "PopupwinManualPromo.stoManualPromo_Load";
                        })
                    )
                    .ColumnModel(
                        X.RowNumbererColumn()

                        , X.CheckColumn().DataIndex("Selected").Text("").Width(40).Editable(true).Align(Alignment.Center)
                        , X.Column().DataIndex("DiscCode").Text(Util.GetLangJS("DiscCode"))
                        , X.Column().DataIndex("Descr").Text(Util.GetLangJS("Descr")).MinWidth(150)
                        , X.Column().DataIndex("PromoTypeDescr").Text(Util.GetLangJS("PromoType")).MinWidth(100)
                        , X.NumberColumn().DataIndex("Discount").Text(Util.GetLangJS("Discount")).Format("0,000.00").Align(Alignment.Right).StyleSpec("text-align:right").Width(80)//.Renderer("PopupwinManualPromo.renderDiscount")
                        , X.Column().DataIndex("FreeItemID").Text(Util.GetLangJS("FreeItemID")).Width(100)
                        , X.Column().DataIndex("UnitDescr").Text(Util.GetLangJS("UnitDescr")).Width(60)
                        , X.Column().DataIndex("SiteType").Text(Util.GetLangJS("SiteID")).MinWidth(90)
                        , X.NumberColumn().DataIndex("FreeItemQty").Text(Util.GetLangJS("FreeItemQty")).Format("0,000").Align(Alignment.Right).StyleSpec("text-align:right").Width(100)
                        .Editor(Html.X().NumberField().MaxValue(10000).MinValue(0).DecimalPrecision(0))
                        , X.NumberColumn().DataIndex("TotalDiscout").Text(Util.GetLangJS("OM10100TotalDiscout")).Format("0,000").Align(Alignment.Right).StyleSpec("text-align:right").Width(120)
            
                    )
                    .SelectionModel(Html.X().RowSelectionModel().ID("smlManualPromo").Mode(SelectionMode.Single))
                    .View(X.GridView().TrackOver(false))
                    .Plugins(
                        X.CellEditing()
                        .ClicksToEdit(1)
                        .Listeners(ls =>
                        {
                            ls.BeforeEdit.Fn = "PopupwinManualPromo.grdManualPromo_BeforeEdit";
                            ls.Edit.Fn = "PopupwinManualPromo.grdManualPromo_Edit";

                        })
                    )
                    .Features(
                        X.GridFilters()
                        .Local(true)
                        .Filters(
                            X.BooleanFilter().DataIndex("Selected"),
                            X.StringFilter().DataIndex("DiscCode"),
                            X.StringFilter().DataIndex("Descr"),
                            X.BooleanFilter().DataIndex("PromoTypeDescr"),
                            X.NumericFilter().DataIndex("Discount"),
                            X.StringFilter().DataIndex("FreeItemID"),
                            X.StringFilter().DataIndex("UnitDescr"),
                            X.StringFilter().DataIndex("SiteType"),                            
                            X.NumericFilter().DataIndex("FreeItemQty"),
                            X.NumericFilter().DataIndex("TotalDiscout")
                        )
                    )
                )

        , X.FormPanel().ID("frmMain")
        .Layout(LayoutType.Border).DefaultAnchor("100%")
        .TrackResetOnLoad(true)
        .KeyMap(Util.SetupKeyMap())
        .TopBar(Util.SetupToolbar(tools: new AbstractComponent[]{
            X.FileUploadField().Hidden(true),
            X.Button().ID("btnBackOrder")
            .Icon(Icon.PageBack).ToolTip(Util.GetLangJS("BackOrder"))
            .Listeners(p=>p.Click.Fn="btnBackOrder_Click"),

            X.FileUploadField().Hidden(true),
            X.Button().ID("btnSearchBackOrder")
            .Icon(Icon.CartRemove).ToolTip(Util.GetLangJS("BackOrder"))
            .Listeners(p=>p.Click.Fn="btnSearchBackOrder_Click"),

            X.Button().ID("btnNote")
            .Icon(Icon.NoteEdit).ToolTip(Util.GetLangJS("Note"))
            .Listeners(p=>p.Click.Fn="btnNote_Click"),

             X.Button().ID("btnShowGift").Hidden(true)
            .Icon(Icon.Ipod).ToolTip(Util.GetLangJS("Gift"))
            .Listeners(p=>p.Click.Fn="btnShowGift_Click"),

             X.Button().ID("btnShowReward")
            .Icon(Icon.MoneyDollar).ToolTip(Util.GetLangJS("OM10100Reward")).Hidden(true)
            .Listeners(p=>p.Click.Fn="btnShowReward_Click"),

            X.FileUploadField()
            .ID("btnImport")
            .ButtonText(Util.GetLangJS("Import"))
            .ButtonOnly(true)
            .Icon(Icon.PageExcel)
            .Listeners(p=>{
                p.Change.Fn = "btnImport_Click";
            }).Hidden(true)
            
            , X.Button().ID("btnManualPromo")
            .Icon(Icon.UserEdit).ToolTip(Util.GetLangJS("OM10100ManualPromo"))
            .Listeners(p=>p.Click.Fn="btnManualPromo_Click"),
        }))
        .FieldDefaults(a => { a.LabelAlign = LabelAlign.Right; a.LabelWidth = 120; })
        .Listeners(p =>
        {
            p.BoxReady.Fn = "frmMain_BoxReady";
            p.FieldChange.Fn = "frmMain_FieldChange";
        })
        .BottomBar(

            X.Toolbar()
            .Items(
                X.ToolbarFill()

                , X.Label().ID("lblQtyAvail").Width(300).MarginSpec("0 5 0 5").StyleSpec("text-align:right;")
            )
        )
        .Items(
            X.Panel()
            .Border(false).Region(Region.North).Layout(LayoutType.VBox)
            .AutoScroll(true)
            .Items(
                X.FieldContainer()
                .MarginSpec("10 0 5 0").Layout(LayoutType.HBox)
                .Items(
                    X.Hidden().ID("tstamp")

                    , HQ.Combo().ID("cboOrderType").Name("OrderType").DataIndex("OrderType").HQLangCodeJS("OrderType")
                    .HQProcedure("OM10100_pcOrderType").HQColumnShow("OrderType,Descr")
                    .DisplayField("Descr").ValueField("OrderType")
                    .LabelWidth(110).Width(260).HQHeightWidth(400, 300)
                    .AllowBlank(false).BlankText(Util.GetLangPrefix("Input", "OrderType"))
                    .ForceSelection(true)
                    .HQControlFocus("cboOrderNbr")
                    .Listeners(p =>
                    {
                        p.Change.Fn = "cboOrderType_Change";
                        p.Focus.Handler = "HQ.focus='order';";
                    })
                    .HQParam(new StoreParameterCollection(){
                        new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw },
                        new StoreParameter() { Name = "@BranchID", Value = "App.txtBranchID.getValue()", Mode = ParameterMode.Raw },
                        new StoreParameter() { Name = "@UserName", Value = "HQ.userName", Mode = ParameterMode.Raw }
                    })
                    .LoadData()

                    , HQ.TextBox().ID("txtInvcNbr").Name("InvcNbr").DataIndex("InvcNbr").HQLangCodeJS("InvcNbr")
                    .MaxLength(30).EnforceMaxLength(true)
                    .LabelWidth(105).Width(240)
                    .HQControlFocus("txtInvcNote")
                    .Listeners(p => {
                        p.Focus.Handler = "HQ.focus='order';";
                        p.Blur.Fn = "txtInvcNbr_Blur";
                    })

                    , X.ComboBox().ID("cboOrderNbr").Name("OrderNbr").DataIndex("OrderNbr").FieldLabel(Util.GetLangJS("OrderNbr"))
                    .LabelWidth(100).Width(260)
                    .ValueField("OrderNbr").DisplayField("OrderNbr")
                    .MinChars(1).PageSize(20).TypeAhead(false).ForceSelection(true)
                    .TriggerAction(TriggerAction.All)
                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                    .Listeners(l =>
                    {
                        l.Change.Fn = "cboOrderNbr_Change";
                        l.Focus.Handler = "HQ.focus='order'";
                        l.TriggerClick.Handler = "if (index == 0) { this.clearValue();} defaultOnNew();";
                        l.Expand.Handler = "App.cboOrderNbr.store.reload();";
                    })
                    .QueryMode(DataLoadMode.Remote).QueryDelay(1000)
                    .MatchFieldWidth(false)
                    .ListConfig(
                        X.BoundList()
                        .Height(500).ItemSelector(".x-boundlist-item").LoadingText(Util.GetLangJS("Loading"))
                        .Tpl(
                            X.XTemplate()
                            .Html(@"<tpl for='.'>
                                        <tpl if='[xindex] == 1'>
                                            <table style='width:650px !important'>
                                                <tr>
                                                    <th>" + Util.GetLangJS("OrderNbr") + @"</th>
                                                    <th>" + Util.GetLangJS("OrderDate") + @"</th>
                                                    <th>" + Util.GetLangJS("CustName") + @"</th>
                                                    <th>" + Util.GetLangJS("LTTContractNbr") + @"</th>
                                                    <th>" + Util.GetLangJS("Address") + @"</th>
                                                    <th>" + Util.GetLangJS("OrderPDA") + @"</th>
                                                    <th>" + Util.GetLangJS("CustID") + @"</th>
                                                    <th>" + Util.GetLangJS("SlsPerID") + @"</th>
                                                    <th>" + Util.GetLangJS("Status") + @"</th>
                                                </tr>
                                        </tpl>
                                        <tr class='x-boundlist-item'>
                                            <td style='width:100px;'>{OrderNbr}</td>
                                            <td style='width:100px;'>{OrderDate:date(""" + Current.FormatDateJS + @""")}</td>
                                            <td style='width:150px;'>{CustName}</td>
                                            <td style='width:100px;'>{LTTContractNbr}</td>
                                            <td style='width:100px;'>{Addr1}</td>
                                            <td style='width:100px;'>{OrigOrderNbr}</td>
                                            <td>{CustID}</td>
                                            <td>{SlsPerID}</td>
                                            <td>{StatusDescr}</td>
                                        </tr>
                                        <tpl if='[xcount-xindex] == 0'>
                                            </table>
                                        </tpl>
                                    </tpl>"
                                            )
                        )
                    )
                    .KeyMap(X.KeyMap().Binding(b => { b.Add(X.KeyBinding().KeysString(((int)KeyCode.ENTER).ToString()).Handler(@"#{cboCustID}.focus();")); }))
                    .StoreID("stoOrder")
        //<td style='width:100px;'>{OrderDate:date(""m-d-Y"")}</td>
                    , HQ.Combo().ID("cboHandle").Name("Handle").HQLangCodeJS("Handle")
                    .HQProcedure("OM10100_pcHandle").HQColumnShow("Code,Descr")
                    .DisplayField("Descr").ValueField("Code")
                    .AllowBlank(false).BlankText(Util.GetLangPrefix("Input", "Handle"))
                    .LabelWidth(120).Width(280).HQHeightWidth(400, 300)
                    .ForceSelection(true)
                    .HQParam(new StoreParameterCollection(){
                        new StoreParameter() { Name = "@Status", Value = "App.cboStatus.getValue()", Mode = ParameterMode.Raw },
                        new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw },
                        new StoreParameter() { Name = "@BranchID", Value = "App.txtBranchID.getValue()", Mode = ParameterMode.Raw },
                        new StoreParameter() { Name = "@UserName", Value = "HQ.userName", Mode = ParameterMode.Raw },
                        new StoreParameter() { Name = "@OrderType", Value = "App.cboOrderType.getValue()", Mode = ParameterMode.Raw }

                    })
                    .LoadData()
                    .HQControlFocus("cboCustID")
                    .Listeners(lst =>
                    {
                        lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                        lst.Focus.Handler = "HQ.focus='order';";
                    })

                )

                , X.FieldContainer()
                .Layout(LayoutType.HBox)
                .Items(

                    HQ.TextBox().ID("txtBranchID").Name("BranchID").HQLangCodeJS("BranchID")
                    .AllowBlank(false).BlankText(Util.GetLangPrefix("Input", "BranchID"))
                    .MaxLength(30).EnforceMaxLength(true)
                    .LabelWidth(110).Width(260)
                    .HQControlFocus("cboOrderNbr")
                    .ReadOnly(true)
                    .Tag("X")
                    .Listeners(p => p.Focus.Handler = "HQ.focus='order';")

                    , HQ.TextBox().ID("txtInvcNote").Name("InvcNote").DataIndex("InvcNote").HQLangCodeJS("InvcNote")
                    .MaxLength(30).EnforceMaxLength(true)
                    .LabelWidth(105).Width(240)
                    .HQControlFocus("cboOrderNbr")
                    .Listeners(p => {
                        p.Focus.Handler = "HQ.focus='order';";
                        p.Blur.Fn = "txtInvcNote_Blur";
                    })

                    , X.Container().Layout(LayoutType.HBox).Items(
                        HQ.TextBox().ID("cboCustID").HQLangCodeJS("CustID").LabelWidth(100).Width(225).Name("CustID").DataIndex("CustID").ReadOnly(true).Tag("X")
                        .Listeners(p =>
                        {
                            p.Change.Fn = "cboCustID_Change";
                            p.Focus.Handler = "HQ.focus='order';";
                        })
                        , HQ.Button().ID("btnFindCust").Icon(Icon.Find).Listeners(l => l.Click.Fn = "btnFindCust_Click").Width(30)
                    )
                    , HQ.Combo().ID("cboStatus").Name("Status").DataIndex("Status").HQLangCodeJS("Status")
                    .HQProcedure("OM10100_pcStatus").HQColumnShow("Code,Descr")
                    .DisplayField("Descr").ValueField("Code")
                    .AllowBlank(false).BlankText(Util.GetLangPrefix("Input", "Status"))
                    .LabelWidth(120).Width(280).HQHeightWidth(400, 300)
                    .ForceSelection(true)
                    .HQParam(new StoreParameterCollection() {
                        new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                    })
                    .LoadData()
                    .Listeners(lst =>
                    {
                        lst.Change.Fn = "cboStatus_Change";
                        lst.Focus.Handler = "HQ.focus='order';";
                    })
                )

                , X.FieldContainer()
                .Layout(LayoutType.HBox)
                .Items(

                    HQ.TextBox().ID("txtCustAddr").Name("CustAddr").DataIndex("CustAddr").HQLangCodeJS("AddressCust")
                    .AllowBlank(false).BlankText(Util.GetLangPrefix("Input", "AddressCust"))
                    .LabelWidth(110).Width(500)
                    .HQControlFocus("txtOrderDate")
                    .Listeners(p => p.Focus.Handler = "HQ.focus='order';")

                    , HQ.TextBox().ID("txtCustName").Name("CustName").DataIndex("CustName").HQLangCodeJS("CustName")
        //.AllowBlank(false)
                    .BlankText(Util.GetLangPrefix("Input", "CustName"))
                    .LabelWidth(100).Width(540)
                    .HQControlFocus("txtOrderDate")
                    .Listeners(p => p.Focus.Handler = "HQ.focus='order';")

                )
                , X.FieldContainer()
                .Layout(LayoutType.HBox)
                .Items(
                    HQ.TextBox().ID("txtRemark").Name("Remark").DataIndex("Remark").HQLangCodeJS("Remark")
                        .AllowBlank(true).BlankText(Util.GetLangPrefix("Input", "Remark"))
                        .LabelWidth(110).Width(500).MaxLength(200).EnforceMaxLength(true)
                        .Listeners(p => p.Focus.Handler = "HQ.focus='order';")
                        , HQ.TextBox().ID("txtCodeHT").Name("LTTContractNbr").DataIndex("LTTContractNbr").HQLangCodeJS("CodeHT")
                        .BlankText(Util.GetLangPrefix("Input", "CodeHT")).MaxLength(30).EnforceMaxLength(true)
                        .LabelWidth(100).Width(260)
                    )
            )

            , X.TabPanel().ID("tabInfo")
            .Layout(LayoutType.Border).Region(Region.Center)
            .Items(

                X.Panel().ID("itmDetail").Title(Util.GetLangJS("OrdInvcInfo"))
                .Region(Region.North).Layout(LayoutType.Border)
                .PaddingSpec("5 0 0 0")
                .Height(142)
                .Items(

                    X.Panel()
                    .Region(Region.North).Layout(LayoutType.VBox)
                    .AutoScroll(true)
                    .Border(false)

                    .Items(

                        X.FieldContainer()
                        .Layout(LayoutType.HBox)
                        .Items(

                            HQ.DateField().ID("txtOrderDate").Name("OrderDate").DataIndex("OrderDate").HQLangCodeJS("OrderDate")
                            .AllowBlank(false).BlankText(Util.GetLangPrefix("Input", "TranDate"))
                            .LabelWidth(120).Width(280)
                            .MinDate(new DateTime(2000, 1, 1)).MaxDate(new DateTime(2100, 1, 1))
                            .HQControlFocus("txtFreightAmt")
                            .Listeners(p =>
                            {
                                p.Focus.Handler = "HQ.focus='batch';";
                                p.Change.Fn = "txtOrderDate_Change";
                            })

                            , HQ.NumberField().ID("txtVolDiscPct").Name("ManualDiscPct").DataIndex("ManualDiscPct").HQLangCodeJS("ManualVolDiscAmt").ReadOnly(true).Tag("X")
                            .LabelWidth(180).Width(260)
                            .MarginSpec("0 0 0 5")
                            .MinValue(0)
                            .HQControlFocus("txtOrdDiscAmt")
                            .Listeners(p =>
                            {
                                p.Focus.Handler = "HQ.focus='order';";
                                p.Change.Fn = "txtVolDiscPct_Change";
                            })

                            , HQ.NumberField().ID("txtOrdDiscAmt").Name("ManualDiscAmt").DataIndex("ManualDiscAmt").ReadOnly(true).Tag("X")
                            .Width(85)
                            .MarginSpec("0 0 0 5")
                            .DecimalPrecision(0).MinValue(0)
                            .HQControlFocus("cboOrderType")
                            .Listeners(p =>
                            {
                                p.Focus.Handler = "HQ.focus='order';";
                                p.Change.Fn = "txtOrdDiscAmt_Change";
                            })

                            , HQ.NumberField().ID("txtTxblAmt").Name("TxblAmt").DataIndex("TxblAmt").HQLangCodeJS("TotItemAmt")
                            .LabelWidth(130).Width(250)
                            .DecimalPrecision(0)
                            .Listeners(p => p.Focus.Handler = "HQ.focus='order';")

                        )

                        , X.FieldContainer()
                        .Layout(LayoutType.HBox)
                        .Items(

                            HQ.NumberField().ID("txtFreightAmt").Name("FreightAmt").DataIndex("FreightAmt").HQLangCodeJS("FrtMisc")
                            .LabelWidth(120).Width(280).Hidden(true)
                            .DecimalPrecision(0).MinValue(0)
                            .HQControlFocus("txtMiscAmt")
                            .Listeners(p =>
                            {
                                p.Focus.Handler = "HQ.focus='order';";
                                p.Change.Fn = "txtFreightAmt_Change";
                            })

                            , HQ.Combo().ID("cboSlsPerID").Name("SlsPerID").DataIndex("SlsPerID").HQLangCodeJS("SlsPerID")
                            .HQProcedure("OM10100_pcSalesPerson").HQColumnShow("SlsperID,Name")
                            .DisplayField("SlsperID").ValueField("SlsperID")
                            .LabelWidth(120).Width(280).HQHeightWidth(400, 300)
                            .AllowBlank(false).BlankText(Util.GetLangPrefix("Select", "SlsPerID"))
                            .ForceSelection(true)
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .HQParam(new StoreParameterCollection(){
                                new StoreParameter() { Name = "@BranchID", Value = "App.txtBranchID.getValue()", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@OrderType", Value = "App.cboOrderType.getValue()", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@UserName", Value = "HQ.userName", Mode = ParameterMode.Raw }
                            })
                            .LoadData()
                            .HQControlFocus("cboDeliveryID")
                            .Listeners(p =>
                            {
                                p.Change.Fn = "cboSlsPerID_Change";
                                p.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                p.Focus.Handler = "HQ.focus='order';";
                            })

                            , HQ.NumberField().ID("txtVolDiscAmt").Name("VolDiscAmt").DataIndex("VolDiscAmt").HQLangCodeJS("Vol/LineDisc")
                            .LabelWidth(180).Width(260)
                            .MarginSpec("0 0 0 5")
                            .DecimalPrecision(0).MinValue(0)
                            .Listeners(p =>
                            {
                                p.Focus.Handler = "HQ.focus='order';";
                            })

                            , HQ.NumberField().ID("txtCuryLineDiscAmt").Name("CuryLineDiscAmt").DataIndex("CuryLineDiscAmt")
                            .Width(85)
                            .MarginSpec("0 0 0 5")
                            .DecimalPrecision(0).MinValue(0)
                            .Listeners(p =>
                            {
                                p.Focus.Handler = "HQ.focus='order';";
                            })
                            , HQ.NumberField().ID("txtCuryTaxAmt").Name("CuryTaxAmt").DataIndex("CuryTaxAmt").HQLangCodeJS("TotTax")
                            .LabelWidth(130).Width(250)
                            .DecimalPrecision(0)
                            .Listeners(p => p.Focus.Handler = "HQ.focus='order';")
                        )

                        , X.FieldContainer()
                        .Layout(LayoutType.HBox)
                        .Items(

                            HQ.NumberField().ID("txtSOFeeTot").Name("SOFeeTot").DataIndex("SOFeeTot").HQLangCodeJS("SOFee/MISCCHARGES")
                            .LabelWidth(120).Width(200).Hidden(true)
                            .DecimalPrecision(0).MinValue(0)
                            .Listeners(p =>
                            {
                                p.Focus.Handler = "HQ.focus='order';";
                            })

                            , HQ.NumberField().ID("txtMiscAmt").Name("MiscAmt").DataIndex("MiscAmt").DataIndex("MiscAmt")
                            .Width(75).Hidden(true)
                            .MarginSpec("0 0 0 5")
                            .DecimalPrecision(0).MinValue(0)
                            .HQControlFocus("txtIssueNumber")
                            .Listeners(p =>
                            {
                                p.Focus.Handler = "HQ.focus='order';";
                                p.Change.Fn = "txtMiscAmt_Change";
                            })

                            , HQ.Combo().ID("cboDeliveryID").Name("DeliveryID").DataIndex("DeliveryID").HQLangCodeJS("DeliveryID")
                            .HQProcedure("OM10100_pcDeliveryID").HQColumnShow("SlsperID,Name")
                            .DisplayField("SlsperID").ValueField("SlsperID")
                            .LabelWidth(120).Width(280).HQHeightWidth(400, 300)
                            .ForceSelection(true)
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .HQParam(new StoreParameterCollection(){
                                new StoreParameter() { Name = "@BranchID", Value = "App.txtBranchID.getValue()", Mode = ParameterMode.Raw }
                            })
                            .LoadData()
                            .HQControlFocus("txtVolDiscPct")
                            .Listeners(p =>
                            {
                                p.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                p.Focus.Handler = "HQ.focus='order';";
                            })

                            , HQ.NumberField().ID("txtRewardAmt").Name("RewardAmt").DataIndex("RewardAmt").HQLangCodeJS("RewardAmt")
                            .LabelWidth(180).Width(350)
                            .MarginSpec("0 0 0 5").ReadOnly(true).Tag("X")
                            .DecimalPrecision(0).MinValue(0)
                            .Listeners(p =>
                            {
                                p.Focus.Handler = "HQ.focus='order';";
                                p.Change.Fn = "getTotalAmt";
                            })
                            , HQ.NumberField().ID("txtCuryOrdAmt").Name("CuryOrdAmt").DataIndex("CuryOrdAmt").HQLangCodeJS("Total")
                                .LabelWidth(130).Width(250)
                                .DecimalPrecision(0).MinValue(0)
                                .Listeners(p =>
                                {
                                    p.Focus.Handler = "HQ.focus='order';";
                                    p.Change.Fn = "getTotalAmt";
                                })


                        )

                        , X.FieldContainer()
                        .Layout(LayoutType.HBox)
                        .Items(

                            HQ.NumberField().ID("txtIssueNumber").Name("IssueNumber").DataIndex("IssueNumber").HQLangCodeJS("IssueNbr")
                            .LabelWidth(120).Width(200).Hidden(true)
                            .DecimalPrecision(0).MinValue(0)
                            .HQControlFocus("txtOrderNo")
                            .Listeners(p =>
                            {
                                p.Focus.Handler = "HQ.focus='order';";
                            })

                            , HQ.NumberField().ID("txtOrderNo").Name("OrderNo").DataIndex("OrderNo")
                            .Width(75).Hidden(true)
                            .MarginSpec("0 0 0 5")
                            .DecimalPrecision(0).MinValue(0)
                            .HQControlFocus("cboMarkOrder")
                            .Listeners(p =>
                            {
                                p.Focus.Handler = "HQ.focus='order';";
                            })

                            , HQ.Checkbox().ID("chkDoNotCalDisc").Name("DoNotCalDisc").DataIndex("DoNotCalDisc").HQLangCodeJS("DoNotCalcDisc")
                            .Width(200)
                            .MarginSpec("0 0 0 125")
                            .HQControlFocus("chkCreditHold")
                            .Listeners(p =>
                            {
                                p.Focus.Handler = "HQ.focus='batch';";
                            })

                            , HQ.NumberField().ID("txtOrdQty").Name("OrdQty").DataIndex("OrdQty").HQLangCodeJS("QuantityTotal")
                                .LabelWidth(180).Width(350)
                                .MarginSpec("0 0 0 -40")
                                .DecimalPrecision(0)
                                .Listeners(p => p.Focus.Handler = "HQ.focus='order';")


                            , HQ.Combo().ID("cboMarkOrder").Name("StationID").DataIndex("StationID").HQLangCodeJS("OM10100_MarkOrder")
                            .HQProcedure("OM10100_pcMarkOrder").HQColumnShow("OrderNbr,RemainDebtPoint")
                            .DisplayField("OrderNbr").ValueField("OrderNbr").Hidden(true)
                            .Width(200).MarginSpec("0 0 0 5").LabelWidth(80)
                            .HQHeightWidth(400, 300)
                            .BlankText(Util.GetLangPrefix("Select", "OrderNbr"))
                            .ForceSelection(true)
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .HQParam(new StoreParameterCollection(){
                                new StoreParameter() { Name = "@BranchID", Value = "App.txtBranchID.getValue()", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@OrderNbr", Value = "App.cboOrderNbr.getValue()", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@CustID", Value = "App.cboCustID.getValue()", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@UserName", Value = "HQ.userName", Mode = ParameterMode.Raw }
                            })
                            .HQAutoLoad(false)
                            .LoadData()
                            .HQControlFocus("cboSlsPerID")
                            .Listeners(p =>
                            {
                                //p.Change.Fn = "cboSlsPerID_Change";
                                p.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                p.Focus.Handler = "HQ.focus='order';";
                            })

                            , HQ.NumberField().ID("txtCuryLineAmt").Name("CuryLineAmt").DataIndex("CuryLineAmt")
                            .MarginSpec("0 0 0 5")
                            .MinValue(0)
                            .Hidden(true)

                            , HQ.NumberField().ID("txtTotAmt").Name("TotAmt")
                            .MarginSpec("0 0 0 0")
                            .MinValue(0).HQLangCodeJS("TotAmt")
                            .LabelWidth(130).Width(250)
                            .DecimalPrecision(0).ReadOnly(true).Tag("X")
                            .Listeners(p =>
                            {
                                p.Focus.Handler = "HQ.focus='order';";
                            })

                        )
                            , X.FieldContainer()
                            .Layout(LayoutType.HBox)
                            .Items(

                                HQ.NumberField().ID("txtSalesMark").Name("SalesMark").DataIndex("SalesMark").HQLangCodeJS("OM10100SlsPromoMark")
                                .LabelWidth(120).Width(200).ReadOnly(true).Tag("X")
                                .DecimalPrecision(1).MinValue(0).Hidden(true)
                                .HQControlFocus("txtPromoMark")
                                .Listeners(p =>
                                {
                                    p.Focus.Handler = "HQ.focus='order';";
                                })
                                , HQ.NumberField().ID("txtPromoMark").Name("PromoMark").DataIndex("PromoMark")
                                .Width(75).ReadOnly(true).Tag("X").Hidden(true)
                                .MarginSpec("0 0 0 5")
                                .DecimalPrecision(0).MinValue(0)
                                .HQControlFocus("txtRewardAmt")
                                .Listeners(p =>
                                {
                                    p.Focus.Handler = "HQ.focus='order';";
                                })

                                , HQ.Checkbox().ID("chkCreditHold").Name("CreditHold").DataIndex("CreditHold").HQLangCodeJS("CreditHold")
                                .Width(200)
                                .MarginSpec("0 0 0 125")
                                .Listeners(p =>
                                {
                                    p.Focus.Handler = "HQ.focus='batch';";
                                })

                                , HQ.NumberField().ID("txtDocBal").Name("txtDocBal").HQLangCodeJS("OM10100DocBal").LabelWidth(160).Width(350)
                                    .MarginSpec("0 0 0 -40").Tag("X").EmptyNumber(0).DecimalPrecision(0)

                            )
                    )
                    , X.Panel().Region(Region.Center)
                    .Layout(LayoutType.Fit)
                    .Items(
                        X.GridPanel().ID("grdOrdDet")
                        .Border(true).BorderSpec("1 0 0 0")
                        .Region(Region.Center)
                        .StoreID("stoOrdDet")
                        
                        .ColumnModel(

                        X.RowNumbererColumn().Width(40).MaxWidth(100).Listeners(x => x.AfterRender.Handler = "this.resizable = true")

                        , X.Column().ID("colBOType").DataIndex("BOType").Text(Util.GetLangJS("Type"))
                        .Width(120)
                        .Renderer("renderBOType")
                        .Editor(
                            HQ.Combo().ID("cboDetBOType")
                            .HQProcedure("OM10100_pcBOType").HQColumnShow("Code,Descr")
                            .ValueField("Code").DisplayField("Descr")
                            .LabelWidth(130).HQHeightWidth(400, 300)
                            .ForceSelection(true)
                            .SubmitValue(false)
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .HQParam(new StoreParameterCollection(){
                                new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }
                            })
                            .Listeners(lst =>
                            {
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                            })
                            .LoadData()
                        )

                        , X.Column().ID("colBarCode").DataIndex("BarCode").Text(Util.GetLangJS("BarCode"))
                        .Width(120)
                        .Editor(
                            HQ.Combo().ID("cboDetBarCode")
                            .ListConfig(Util.HQBoundList("BarCode,InvtID,Descr", 400, 300))
                            .DisplayField("BarCode").ValueField("BarCode")
                            .LabelWidth(90).HQHeightWidth(400, 300)
                            .MatchFieldWidth(false)
                            .StoreID("stoInvt")
                            .ForceSelection(true)
                            .SubmitValue(false)
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .Listeners(lst =>
                            {
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                            })
                        )

                        , X.Column().ID("colInvtID").DataIndex("InvtID").Text(Util.GetLangJS("InvtID"))
                        .Width(120)
                        .Editor(
                            HQ.Combo().ID("cboDetInvtID")
                            .ListConfig(Util.HQBoundList("InvtID,Descr,Descr1,Color", 400, 500))
                            .DisplayField("InvtID").ValueField("InvtID")
                            .MatchFieldWidth(false)
                            .StoreID("stoInvt")
                            .ForceSelection(true)
                            .SubmitValue(false)
                            .QueryMode(DataLoadMode.Local)
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .Listeners(lst =>
                            {
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                lst.BeforeQuery.Handler = "FilterCombo(App.cboDetInvtID,'InvtID,Descr,Descr1,Color')";
                            })
                        )

                        , X.Column().ID("colDescr").DataIndex("Descr").Text(Util.GetLangJS("Descr")).MinWidth(120)

                        , X.Column().ID("colSlsUnit").DataIndex("SlsUnit").Text(Util.GetLangJS("Unit"))
                        .Width(100)
                        .Editor(
                            X.ComboBox().ID("cboDetUnitDesc")
                            .DisplayField("FromUnit").ValueField("FromUnit")
                            .StoreID("stoUnit")
                            .QueryMode(DataLoadMode.Local)
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .Listeners(lst =>
                            {
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                            })
                        )

                        , X.Column().ID("colSiteID").DataIndex("SiteID").Text(Util.GetLangJS("SiteID"))
                        .Width(120)
                        .Editor(
                            HQ.Combo().ID("cboDetSiteID")
                            .HQProcedure("OM10100_pcSite").HQColumnShow("SiteID,Name")
                            .DisplayField("SiteID").ValueField("SiteID")
                            .HQHeightWidth(400, 300)
                            .ForceSelection(true)
                            .SubmitValue(false)
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .HQParam(new StoreParameterCollection(){
                            new StoreParameter() { Name = "@BranchID", Value = "App.txtBranchID.getValue()", Mode = ParameterMode.Raw },
                            new StoreParameter() { Name = "@OrderType", Value = "App.cboOrderType.getValue()", Mode = ParameterMode.Raw },
                            new StoreParameter() { Name = "@SlsperID", Value = "App.cboSlsPerID.getValue()", Mode = ParameterMode.Raw },
                            new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw },
                            new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                            new StoreParameter() { Name = "@UserName", Value = "HQ.userName", Mode = ParameterMode.Raw }
                        })
                            .Listeners(lst =>
                            {
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                            })
                            .LoadData()
                        )

                        , X.NumberColumn().ID("colLineQty").DataIndex("LineQty").Text(Util.GetLangJS("Qty")).Align(Alignment.Right).StyleSpec("text-align:right")
                            .Width(75)
                            .Renderer("renderQtyAmt")
                            .Editor(Html.X().NumberField().MinValue(0).DecimalPrecision(0))
                        //, X.ComponentColumn().Renderer("renderItem")
                        //.Text("")
                        //.Width(26)
                        //.Component(
                        //    X.Button()
                        //    .MarginSpec("1 4 1 3").Height(18).Text("")
                        //    .Listeners(p => p.Click.Fn = "btnLot_Click")
                        //)

                        , X.ComponentColumn()
                        .Text("")
                        .Width(36)
                        .Component(
                            X.Button().IconCls("icon-item-lot")
                            .Text("")
                            .Listeners(p => p.Click.Fn = "btnLot_Click")
                        )
                        
                        , X.NumberColumn().ID("colSlsPrice").DataIndex("SlsPrice").Text(Util.GetLangJS("SalesPrice")).Align(Alignment.Right).StyleSpec("text-align:right")
                            .Width(100)
                            .Renderer("renderQtyAmt")
                            .Editor(Html.X().NumberField().ID("txtDetSlsPrice").MaxValue(100000000).MinValue(0).DecimalPrecision(0))

                        , X.NumberColumn().ID("colLineAmt").DataIndex("LineAmt").Text(Util.GetLangJS("ExtCost")).Align(Alignment.Right).StyleSpec("text-align:right")
                            .Width(100)
                            .Renderer("renderQtyAmt")
                            .Editor(Html.X().NumberField().ID("txtDetLineAmt").MinValue(0).DecimalPrecision(0))//.MaxValue(1000000000)

                        , X.CheckColumn().ID("colFreeItem").DataIndex("FreeItem").Editable(true).Text(Util.GetLangJS("FreeItem")).Width(80)

                        , X.NumberColumn().ID("txtMark").DataIndex("Mark").Text(Util.GetLangJS("Mark")).Width(100).Format("0,000.0").Align(Alignment.Right).StyleSpec("text-align:right")
                        , X.Column().Text(Util.GetLangJS("PosmID")).DataIndex("POSM").Width(120)
                        .Editor(
                            X.ComboBox().ID("cboPOSM")
                            .DisplayField("POSMID").ValueField("POSMID")
                            .StoreID("stoPOSMID")
                            .QueryMode(DataLoadMode.Local)
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .Listeners(lst =>
                            {
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                            })
                        )
                        , X.Column().ID("colDiscCode").DataIndex("DiscCode").Text(Util.GetLangJS("DiscCode"))
                        .Width(120)
                        .Editor(
                            HQ.Combo().ID("cboDetDiscCode")
                            .HQColumnShow("DiscCode,Descr")
                            .HQAutoLoad(false)
                            .ListConfig(Util.HQBoundList("DiscCode,Descr", 400, 300))
                            .MatchFieldWidth(false)
                            .DisplayField("DiscCode").ValueField("DiscCode")
                            .SubmitValue(false)
                            .StoreID("stoDisc")
                            .QueryMode(DataLoadMode.Local)
                            .ForceSelection(true)
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .Listeners(lst =>
                            {
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                            })
                        )

                        , X.NumberColumn().ID("colUnitRate").DataIndex("UnitRate").Text(Util.GetLangJS("CnvFact"))
                        .Width(100)
                        .Align(Alignment.Right).StyleSpec("text-align:right")
                        .Editor(Html.X().NumberField().MaxValue(1000).MinValue(0).DecimalPrecision(0))




                        , X.NumberColumn().ID("colQtyBO").DataIndex("QtyBO").Text(Util.GetLangJS("QtyBO"))
                        .Width(90)
                        .Align(Alignment.Right).StyleSpec("text-align:right")
                        .Renderer("renderQtyAmt")
                        .Editor(Html.X().NumberField().MaxValue(10000).MinValue(0).DecimalPrecision(0))



                        , X.NumberColumn().ID("colDiscPct").DataIndex("DiscPct").Text(Util.GetLangJS("DiscPct"))
                        .Width(90)
                        .Align(Alignment.Right).StyleSpec("text-align:right")
                        .Renderer("renderQtyAmt2")
                        //.Editor(Html.X().NumberField().ID("txtDetDiscPct").MaxValue(1000).MinValue(0).DecimalPrecision(2))

                        , X.NumberColumn().ID("colDiscAmt").DataIndex("DiscAmt").Text(Util.GetLangJS("LineDiscAmt"))
                        .Width(90)
                        .Align(Alignment.Right).StyleSpec("text-align:right")
                        .Renderer("renderQtyAmt")
                        //.Editor(Html.X().NumberField().ID("txtDetDiscAmt").MaxValue(1000000000).MinValue(0).DecimalPrecision(0))

                        , X.NumberColumn().ID("colManuDiscAmt").DataIndex("ManuDiscAmt").Text(Util.GetLangJS("ManuDiscAmt")).Hidden(true).Hideable(false)
                        .Width(90)
                        .Align(Alignment.Right).StyleSpec("text-align:right")
                        .Renderer("renderQtyAmt")
                        .Editor(Html.X().NumberField().MaxValue(1000000000).MinValue(0).DecimalPrecision(0))

                        , X.NumberColumn().ID("colDocDiscAmt").DataIndex("SumDiscInvoice").Text(Util.GetLangJS("DocDiscAmt"))
                        .Width(90)
                        .Align(Alignment.Right).StyleSpec("text-align:right")
                        .Renderer("renderQtyAmt")

                        , X.Column().ID("colSOFee").DataIndex("SOFee").Text(Util.GetLangJS("SOFee")).Width(120).Hidden(true).Hideable(false)
                        .Align(Alignment.Right).StyleSpec("text-align:right")
                        .Renderer("renderQtyAmt")
                        .Editor(Html.X().NumberField().MaxValue(1000000000).MinValue(0).DecimalPrecision(0))

                        , X.Column().ID("colBOCustID").DataIndex("BOCustID").Text(Util.GetLangJS("BOCustID"))
                        .Width(120)

                        , X.Column().ID("colBudgetID1").DataIndex("BudgetID1").Text(Util.GetLangJS("BudgetID"))
                        .Width(120)
                        .Editor(
                            HQ.Combo().ID("cboDetBudgetID")
                            .HQProcedure("OM10100_pcBudget").HQColumnShow("BudgetID,Descr")
                            .DisplayField("BudgetID").ValueField("BudgetID")
                            .HQHeightWidth(400, 300)
                            .ForceSelection(true)
                            .SubmitValue(false)
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .HQParam(new StoreParameterCollection(){
                                new StoreParameter() { Name = "@branchID", Value = "App.txtBranchID.getValue()", Mode = ParameterMode.Raw }
                            })
                            .Listeners(lst =>
                            {
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                            })
                            .LoadData()
                        )

                        , X.Column().ID("colTaxCat").DataIndex("TaxCat").Text(Util.GetLangJS("TaxCat"))
                        .Width(120)
                        .Editor(
                            HQ.Combo().ID("cboDetTaxCat")
                            .HQProcedure("OM10100_pcTaxCat").HQColumnShow("Code,Descr")
                            .DisplayField("Code").ValueField("Code")
                            .HQHeightWidth(400, 300)
                            .ForceSelection(true)
                            .SubmitValue(false)
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .Listeners(lst =>
                            {
                                lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                            })
                            .LoadData()
                       )

                       , X.Column().ID("colTaxID").DataIndex("TaxID").Text(Util.GetLangJS("TaxID"))
                       .Width(120)
                       .Editor(
                            X.MultiCombo().ID("cboDetTaxID")
                            .StoreID("stoTax")
                            .ValueField("TaxID").DisplayField("TaxID")
                            .MatchFieldWidth(false)
                            .ForceSelection(true)
                            .SubmitValue(false)
                            .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                            .Listeners(lst => { lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}"; })

                        )

                        , X.Column().ID("colOrigOrderNbr").DataIndex("OrigOrderNbr").Text(Util.GetLangJS("OrigOrderNbr"))
                        .Width(120)

                        , X.Column().DataIndex("DisplayID").Text(Util.GetLangJS("OM10100DisplayID"))
                        .Width(120)
                        , X.Column().DataIndex("DisplayPeriodID").Text(Util.GetLangJS("OM10100PeriodID"))
                        .Width(120)
                    )
                    .Listeners(lst =>
                    {
                        lst.Select.Handler = "HQ.focus='det';";
                        lst.Edit.Fn = "grdOrdDet_Edit";
                        lst.ValidateEdit.Fn = "grdOrdDet_ValidateEdit";
                        lst.BeforeEdit.Fn = "grdOrdDet_BeforeEdit";
                        lst.SelectionChange.Fn = "grdOrdDet_SelectionChange";
                    })
                    .SelectionModel(Html.X().RowSelectionModel().ID("smlOrdDet").Mode(SelectionMode.Single))
                    .View(X.GridView().TrackOver(false).AllowCopy(true).EnableTextSelection(true))
                    .Plugins(Html.X().CellEditing().ClicksToEdit(1)).SortableColumns(true)

                    .Features(
                        X.GridFilters()
                            .Local(true)
                            .Filters(

                                X.StringFilter().DataIndex("BOType"),
                                X.StringFilter().DataIndex("BarCode"),
                                X.StringFilter().DataIndex("InvtID"),
                                X.StringFilter().DataIndex("Descr"),
                                X.BooleanFilter().DataIndex("FreeItem"),

                                X.NumericFilter().DataIndex("Mark"),
                                X.StringFilter().DataIndex("POSM"),
                                X.StringFilter().DataIndex("DiscCode"),
                                X.StringFilter().DataIndex("SlsUnit"),
                                X.NumericFilter().DataIndex("UnitRate"),
                                X.NumericFilter().DataIndex("LineQty"),
                                X.StringFilter().DataIndex("SiteID"),

                                X.NumericFilter().DataIndex("QtyBO"),
                                X.NumericFilter().DataIndex("SlsPrice"),
                                X.NumericFilter().DataIndex("DiscPct"),
                                X.NumericFilter().DataIndex("DiscAmt"),
                                X.NumericFilter().DataIndex("ManuDiscAmt"),
                                X.NumericFilter().DataIndex("DocDiscAmt"),
                                X.NumericFilter().DataIndex("LineAmt"),
                                X.NumericFilter().DataIndex("SOFee"),

                                X.StringFilter().DataIndex("BOCustID"),
                                X.StringFilter().DataIndex("BudgetID1"),
                                X.StringFilter().DataIndex("TaxCat"),//.ValidateRecord(p => p.Fn = "stringFilter"),
                                X.StringFilter().DataIndex("TaxID"),//.ValidateRecord(p => p.Fn = "stringFilter"),
                                X.StringFilter().DataIndex("OrigOrderNbr")//.ValidateRecord(p => p.Fn = "stringFilter")
                                , X.StringFilter().DataIndex("DisplayID"),
                                X.StringFilter().DataIndex("DisplayPeriodID")
                            )
                        )
                    )
                ) // tab Ship

                , X.Panel().ID("itmShipping").Title(Util.GetLangJS("ShipInfo"))
                .PaddingSpec("5 0 5 0")
                .Layout(LayoutType.VBox)
                .AutoScroll(true)
                .Items(

                    X.FieldContainer()
                    .Layout(LayoutType.HBox)
                    .Items(

                        HQ.Combo().ID("cboReasonCode").Name("ReasonCode").DataIndex("ReasonCode").HQLangCodeJS("ReasonCD")
                        .HQProcedure("OM10100_pcReasonCode").HQColumnShow("Code,Descr")
                        .DisplayField("Descr").ValueField("Code")
                        .LabelWidth(130).Width(500)//.HQHeightWidth(400, 300)
                        .ForceSelection(true)
                        .HQControlFocus("txtExpiryDate")
                        .Listeners(p =>
                        {
                            p.Focus.Handler = "HQ.focus='order';";
                        })
                        .LoadData()
                    )

                    , X.FieldContainer()
                    .Layout(LayoutType.HBox)
                    .Items(

                        HQ.TextBox().ID("txtOrigOrderNbr").Name("OrigOrderNbr").DataIndex("OrigOrderNbr").HQLangCodeJS("OrigOrderNbr")
                        .LabelWidth(130).Width(250)

                        , HQ.NumberField().ID("txtOrderWeight").Name("OrderWeight").DataIndex("OrderWeight").HQLangCodeJS("OrdWeight")
                        .LabelWidth(130).Width(250)
                        .HQControlFocus("txtUnitsShipped")
                    )

                    , X.FieldContainer()
                    .Layout(LayoutType.HBox)
                    .Items(

                        HQ.DateField().ID("txtExpiryDate").Name("ExpiryDate").DataIndex("ExpiryDate").HQLangCodeJS("CancelDate")
                        .LabelWidth(130).Width(250)
                        .HQControlFocus("txtShipDate")

                        , HQ.NumberField().ID("txtUnitsShipped").Name("UnitsShipped").HQLangCodeJS("UnitShipped")
                        .LabelWidth(130).Width(250)
                        .HQControlFocus("txtFreightCost")
                    )

                    , X.FieldContainer()
                    .Layout(LayoutType.HBox)
                    .Items(

                        HQ.DateField().ID("txtShipDate").Name("ShipDate").DataIndex("ShipDate").HQLangCodeJS("ShipDate")
                        .AllowBlank(false).BlankText(Util.GetLangPrefix("Select", "ShipDate"))
                        .LabelWidth(130).Width(250)
                        .HQControlFocus("txtARDocDate")

                        , HQ.NumberField().ID("txtFreightCost").Name("FreightCost").DataIndex("FreightCost").HQLangCodeJS("FreightCost")
                        .MinValue(0)
                        .LabelWidth(130).Width(250)
                        .HQControlFocus("txtFreightAllocAmt")
                    )

                    , X.FieldContainer()
                    .Layout(LayoutType.HBox)
                    .Items(

                        HQ.DateField().ID("txtARDocDate").Name("ARDocDate").DataIndex("ARDocDate").HQLangCodeJS("InvcDate")
                        .AllowBlank(false).BlankText(Util.GetLangPrefix("Select", "InvcDate"))
                        .LabelWidth(130).Width(250)
                        .HQControlFocus("cboTerms")

                        , HQ.NumberField().ID("txtFreightAllocAmt").Name("FreightAllocAmt").HQLangCodeJS("FreightAllocAmt")
                        .LabelWidth(130).Width(250)
                        .MinValue(0)
                        .HQControlFocus("txtPremFreightAmt")
                    )

                    , X.FieldContainer()
                    .Layout(LayoutType.HBox)
                    .Items(

                        HQ.TextBox().ID("txtARRefNbr").Name("ARRefNbr").DataIndex("ARRefNbr").HQLangCodeJS("RefNbr")
                        .LabelWidth(130).Width(250)

                        , HQ.NumberField().ID("txtPremFreightAmt").Name("PremFreightAmt").DataIndex("PremFreightAmt").HQLangCodeJS("PremFreightAmt")
                        .LabelWidth(130).Width(250)
                        .HQControlFocus("txtCustOrderNbr")
                    )

                    , X.FieldContainer()
                    .Layout(LayoutType.HBox)
                    .Items(

                        HQ.TextBox().ID("txtLastInvcNbr").Name("LastInvcNbr").DataIndex("LastInvcNbr").HQLangCodeJS("LastInvcNbr")
                        .LabelWidth(130).Width(250)

                        , HQ.TextBox().ID("txtCustOrderNbr").Name("CustOrderNbr").DataIndex("CustOrderNbr").HQLangCodeJS("CustOrderNbr")
                        .LabelWidth(130).Width(250)
                        .HQControlFocus("txtCmmnPct")
                    )

                    , X.FieldContainer()
                    .Layout(LayoutType.HBox)
                    .Items(

                        HQ.Combo().ID("cboTerms").Name("Terms").DataIndex("Terms").HQLangCodeJS("Term")
                        .HQProcedure("OM10100_pcTerms").HQColumnShow("TermsID,Descr")
                        .LabelWidth(130).Width(250).HQHeightWidth(400, 300)
                        .AllowBlank(false).BlankText(Util.GetLangPrefix("Select", "Term"))
                        .ForceSelection(true)
                        .ValueField("TermsID").DisplayField("TermsID")
                        .HQControlFocus("txtOrderWeight")
                        .Listeners(p =>
                        {
                            p.Focus.Handler = "HQ.focus='order';";
                        })
                        .LoadData()

                        , HQ.NumberField().ID("txtCmmnPct").Name("CmmnPct").DataIndex("CmmnPct").HQLangCodeJS("CmmnPct")
                        .LabelWidth(130).Width(250)
                        .HQControlFocus("cboReasonCode")
                    )
                    , X.FieldContainer()
                    .Layout(LayoutType.HBox)
                    .Items(
                        HQ.TextBox().ID("txtOrdFormat2").Name("txtOrdFormat2").HQLangCodeJS("OM10100OrdFormat2").ReadOnly(true)
                        .LabelWidth(130).Width(500)
                    )
                ) // tab ship

                , X.Panel().ID("itmAddress").Title(Util.GetLangJS("Address"))
                .PaddingSpec("5 0 5 0")
                .Layout(LayoutType.Anchor).AutoScroll(true)
                .Items(
                    X.Hidden().ID("txtShipPriority").Name("ShipPriority").DataIndex("ShipPriority")

                    , HQ.Combo().ID("cboShiptoID").Name("ShiptoID").DataIndex("ShiptoID").HQLangCodeJS("ShiptoID")
                    .HQColumnShow("ShipToId")
                    .HQAutoLoad(false)
                    .LabelWidth(130).Width(300).HQHeightWidth(400, 300)
                    .AllowBlank(false).BlankText(Util.GetLangPrefix("Select", "ShiptoID"))
                    .ForceSelection(true)
                    .ValueField("ShipToId").DisplayField("ShipToId")
                    .StoreID("stoShipToID")
                    .QueryMode(DataLoadMode.Local)
                    .HQControlFocus("txtBillName")
                    .Listeners(p =>
                    {
                        p.Change.Fn = "cboShiptoID_Change";
                        p.Focus.Handler = "HQ.focus='order';";
                    })

                    , X.FieldContainer()
                    .PaddingSpec("5 10 0 10")
                    .Layout(LayoutType.HBox).AutoScroll(true)
                    .Items(

                        X.FieldSet()
                        .Title("<span style=\"font-size:12px;font-weight:bold;\">" + Util.GetLangJS("Billing") + "</span>")
                        .MinWidth(400)
                        .Layout(LayoutType.VBox)
                        .PaddingSpec("0 10 5 10")
                        .Items(

                            HQ.TextBox().ID("txtBillName").Name("BillName").DataIndex("BillName").HQLangCodeJS("Name")
                            .LabelWidth(110).Width(480)
                            .HQControlFocus("txtBillAttn")

                            , HQ.TextBox().ID("txtBillAttn").Name("BillAttn").DataIndex("BillAttn").HQLangCodeJS("Attn")
                            .LabelWidth(110).Width(480)
                            .HQControlFocus("txtBillAddrLine1")

                            , HQ.TextBox().ID("txtBillAddrLine1").Name("BillAddrLine1").DataIndex("BillAddrLine1").FieldLabel(Util.GetLangJS("Address1"))
                            .LabelWidth(110).Width(480)
                            .HQControlFocus("txtBillAddrLine2")

                            , HQ.TextBox().ID("txtBillAddrLine2").Name("BillAddrLine2").DataIndex("BillAddrLine2").HQLangCodeJS("Address2")
                            .LabelWidth(110).Width(480)
                            .HQControlFocus("txtBillZip")


                            , HQ.TextBox().ID("txtBillZip").Name("BillZip").DataIndex("BillZip").HQLangCodeJS("Zip")
                            .LabelWidth(110).Width(480)
                            .HQControlFocus("txtBillPhone")

                            , HQ.TextBox().ID("txtBillPhone").Name("BillPhone").DataIndex("BillPhone").HQLangCodeJS("Phone")
                            .LabelWidth(110).Width(480)
                            .HQControlFocus("txtBillFax")


                            , HQ.TextBox().ID("txtBillFax").Name("BillFax").DataIndex("BillFax").HQLangCodeJS("Fax")
                            .LabelWidth(110).Width(480)
                            .HQControlFocus("txtBillStateID")
                           
                            , HQ.TextBox().ID("txtBillStateID").Name("BillStateID").DataIndex("BillStateID").HQLangCodeJS("State")
                            .LabelWidth(110).Width(480)
                            .HQControlFocus("txtBillCntryID")

                            , HQ.TextBox().ID("txtBillCntryID").Name("BillCntryID").DataIndex("BillCntryID").HQLangCodeJS("Country")
                            .LabelWidth(110).Width(480)
                            .HQControlFocus("txtTaxRegNbr")

                            , HQ.TextBox().ID("txtTaxRegNbr").Name("TaxRegNbr").DataIndex("TaxRegNbr").HQLangCodeJS("TaxRegNbr")
                            .LabelWidth(110).Width(480)
                            .HQControlFocus("txtShipName")
                        )

                        , X.FieldSet()
                        .MarginSpec("0 0 0 10")
                        .Title("<span style=\"font-size:12px;font-weight:bold;\">" + Util.GetLangJS("Shipping") + "</span>")
                        .MinWidth(400)
                        .Layout(LayoutType.VBox)
                        .PaddingSpec("0 10 5 10")
                        .Items(

                            HQ.TextBox().ID("txtShipName").Name("ShipName").DataIndex("ShipName").HQLangCodeJS("Name")
                            .LabelWidth(110).Width(480)
                            .HQControlFocus("txtShipAttn")

                            , HQ.TextBox().ID("txtShipAttn").Name("ShipAttn").DataIndex("ShipAttn").HQLangCodeJS("Attn") 
                            .LabelWidth(110).Width(480)
                            .HQControlFocus("txtShipAddrLine1")

                            , HQ.TextBox().ID("txtShipAddrLine1").Name("ShipAddrLine1").DataIndex("ShipAddrLine1").HQLangCodeJS("Address1")
                            .LabelWidth(110).Width(480)
                            .HQControlFocus("txtShipAddrLine2")

                            , HQ.TextBox().ID("txtShipAddrLine2").Name("ShipAddrLine2").DataIndex("ShipAddrLine2").HQLangCodeJS("Address2")
                            .LabelWidth(110).Width(480)
                            .HQControlFocus("txtShipZip")


                            , HQ.TextBox().ID("txtShipZip").Name("ShipZip").DataIndex("ShipZip").HQLangCodeJS("Zip")
                            .LabelWidth(110).Width(480)
                            .HQControlFocus("txtShipPhone")

                            , HQ.TextBox().ID("txtShipPhone").Name("ShipPhone").DataIndex("ShipPhone").HQLangCodeJS("Phone")
                            .LabelWidth(110).Width(480)
                            .HQControlFocus("txtShipFax")

                            , HQ.TextBox().ID("txtShipFax").Name("ShipFax").DataIndex("ShipFax").HQLangCodeJS("Fax")
                            .LabelWidth(110).Width(480)
                            .HQControlFocus("txtShipStateID")
                                        
                            , HQ.TextBox().ID("txtShipStateID").Name("ShipStateID").DataIndex("ShipStateID").HQLangCodeJS("State")
                            .LabelWidth(110).Width(480)
                            .HQControlFocus("txtShipCntryID")

                            , HQ.TextBox().ID("txtShipCntryID").Name("ShipCntryID").DataIndex("ShipCntryID").HQLangCodeJS("Country")
                            .LabelWidth(110).Width(480)
                            .HQControlFocus("cboShiptoID")

                            , X.Label().MarginSpec("11 0 0 0")
                        )
                    )
                ) // tab Address

                , X.Panel().ID("itmTax").Title(Util.GetLangJS("Tax"))
                .Layout(LayoutType.Anchor).AnchorHorizontal("100%").AnchorVertical("100%")
                .Items(

                    X.GridPanel().ID("grdTaxTrans")
                    .StoreID("stoTaxTrans")
                    .AnchorHorizontal("100%").AnchorVertical("50%")
                    .ColumnModel(

                        X.RowNumbererColumn()

                        , X.Column().DataIndex("LineRef").Text(Util.GetLangJS("LineRef"))
                        .Width(120)

                        , X.Column().DataIndex("TaxID").Text(Util.GetLangJS("TaxID"))
                        .Width(120)

                        , X.Column().DataIndex("TaxRate").Text(Util.GetLangJS("TaxRate"))
                        .Align(Alignment.Right).StyleSpec("text-align:left")
                        .Renderer("renderQtyAmt")
                        .Width(120)

                        , X.Column().DataIndex("TaxAmt").Text(Util.GetLangJS("TaxAmt"))
                        .Align(Alignment.Right).StyleSpec("text-align:left")
                        .Renderer("renderQtyAmt")
                        .Width(120)

                        , X.Column().DataIndex("TxblAmt").Text(Util.GetLangJS("TxblAmt"))
                        .Align(Alignment.Right).StyleSpec("text-align:left")
                        .Renderer("renderQtyAmt")
                        .Width(120)

                        , X.Column().DataIndex("TaxLevel").Text(Util.GetLangJS("Level"))
                        .Align(Alignment.Right).StyleSpec("text-align:left")
                        .Renderer("renderQtyAmt")
                        .Width(120)
                    )
                    .SelectionModel(Html.X().RowSelectionModel().ID("smlTaxTrans").Mode(SelectionMode.Single))
                        .View(X.GridView().TrackOver(false).EnableTextSelection(true)) // grid tax trans

                    , X.Panel()
                    .Layout(LayoutType.VBox).AnchorVertical("5%")
                    .Border(false)
                    .LayoutConfig(config => { config.Add(new VBoxLayoutConfig() { Align = VBoxAlign.Center }); })
                    .Items(

                        X.Label()
                        .Margin(5).Text(Util.GetLangJS("TaxTotal")).AnchorHorizontal("100%")
                    )

                    , X.GridPanel().ID("grdTaxDoc")
                    .AnchorHorizontal("100%").AnchorVertical("45%")
                    .StoreID("stoTaxDoc")
                    .ColumnModel(

                        X.RowNumbererColumn()

                        , X.Column().DataIndex("TaxID").Text(Util.GetLangJS("TaxID"))
                        .Width(120)

                        , X.Column().DataIndex("TaxRate").Text(Util.GetLangJS("TaxRate"))
                        .Align(Alignment.Right).StyleSpec("text-align:left")
                        .Renderer("renderQtyAmt")
                        .Width(120)

                        , X.Column().DataIndex("TaxAmt").Text(Util.GetLangJS("TaxAmt"))
                        .Align(Alignment.Right).StyleSpec("text-align:left")
                        .Renderer("renderQtyAmt")
                        .Width(120)

                        , X.Column().DataIndex("TxblAmt").Text(Util.GetLangJS("TxblAmt"))
                        .Align(Alignment.Right).StyleSpec("text-align:left")
                        .Renderer("renderQtyAmt")
                        .Width(120)
                    )
                    .SelectionModel(Html.X().RowSelectionModel().ID("smlTaxDoc").Mode(SelectionMode.Single))
                        .View(X.GridView().TrackOver(false).EnableTextSelection(true))
                ) // tab Tax

                , X.Panel().ID("itemDiscount").Title(Util.GetLangJS("Discount"))
                .Layout(LayoutType.Fit)
                .AutoScroll(true)
                .Items(
                    Html.X().GridPanel()
                    .ID("grdDisc")
                    .StoreID("stoOrdDisc")
                    .ColumnModel(

                        X.RowNumbererColumn()

                        , X.Column().DataIndex("DiscID")
                        .Text(Util.GetLangJS("DiscID"))

                        , X.Column().DataIndex("DiscSeq").Text(Util.GetLangJS("DiscSeq"))

                        , X.Column().DataIndex("DiscBreakLineRef").Text(Util.GetLangJS("LineRef"))

                        , X.Column().DataIndex("DiscType").Text(Util.GetLangJS("Type"))

                        , X.Column().DataIndex("DiscAmt").Text(Util.GetLangJS("DiscAmt"))
                        .Align(Alignment.Right).StyleSpec("text-align:left")
                        .Renderer("renderQtyAmt")

                        , X.Column().DataIndex("DisctblAmt").Text(Util.GetLangJS("DisctblAmt")).Width(150)
                        .Align(Alignment.Right).StyleSpec("text-align:left").Hidden(true).Hideable(false)
                        .Renderer("renderQtyAmt")

                        , X.Column().DataIndex("DisctblQty").Text(Util.GetLangJS("OM10100Qty"))
                        .Align(Alignment.Right).StyleSpec("text-align:left")
                        .Renderer("renderQtyAmt")

                        , X.Column().DataIndex("FreeItemID").Text(Util.GetLangJS("FreeItemID"))

                        , X.Column().DataIndex("FreeItemQty").Text(Util.GetLangJS("FreeItemQty"))
                        .Align(Alignment.Right).StyleSpec("text-align:left")
                        .Renderer("renderQtyAmt")

                        , X.Column().DataIndex("OrigFreeItemQty").Text(Util.GetLangJS("OrigFreeItemQty"))
                        .Align(Alignment.Right).StyleSpec("text-align:left")
                        .Renderer("renderQtyAmt")

                        , X.Column().DataIndex("SlsPerID").Text(Util.GetLangJS("SlsPerID"))

                        , X.Column().DataIndex("UserOperationLog").Text(Util.GetLangJS("UserLog"))
                        .Flex(1).MinWidth(120)

                    )
                    .SelectionModel(Html.X().RowSelectionModel().ID("smlOrdDisc").Mode(SelectionMode.Single))
                        .View(X.GridView().TrackOver(false).EnableTextSelection(true))
                ) // tab Discount
            ) // tab Control
        )
    )
)


@(X.Window()
        .ID("winDetail")
        .Hidden(true)
        .Title(Util.GetLangJS("Gift"))
        .Layout(LayoutType.Anchor)
        .Height(400)
        .Width(600)
        .Modal(true)
        .Closable(true)
        .Buttons(
            X.Button().ID("btnAddnew").Text(Util.GetLangJS("Addnew"))
                .Listeners(p => p.Click.Fn = "PopupwinDetail.btnAddnew_Click")
            , X.Button().ID("btnDelete").Text(Util.GetLangJS("Delete"))
                .Listeners(p => p.Click.Fn = "PopupwinDetail.btnDelete_Click")
            , X.Button().ID("btnDetailOk").Text(Util.GetLangJS("OK"))
                .Listeners(p => p.Click.Fn = "PopupwinDetail.btnDetailOK_Click")
        )
        .Items(
            X.GridPanel().ID("grdDetail")
            .Border(false).Anchor("100% -0")
            .StoreID("stoEditDetail")
            .ColumnModel(
                X.RowNumbererColumn().Renderer("PopupwinDetail.renderRowNumberDetail")

                , X.Column().DataIndex("DiscType").Text(Util.GetLangJS("DiscType")).Width(120).Renderer("renderDiscType")
                    .Editor(HQ.Combo().ID("cboDiscType").Name("DiscType").HideLabel(true).LabelWidth(0)
                                .HQDBSys(false).HQProcedure("OM10100_pcDiscType").ForceSelection(true)
                                .HQColumnShow("Descr")
                                .DisplayField("Descr")
                                .ValueField("Code")
                                .HQHeightWidth(400, 300)
                                .HQParam(new StoreParameterCollection() {
                                            new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw}
                                    })
                                .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                .Listeners(lst => { lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}"; })
                                .LoadData()
                                )

                , X.Column().DataIndex("Code").Text(Util.GetLangJS("CodeProgram")).Width(120).Renderer("renderCodeProgram")
                            .Editor(HQ.Combo().ID("cboCode").Name("Code").HideLabel(true).LabelWidth(0)
                                                                                    .HQDBSys(false).HQProcedure("OM10100_pcCodeProgram").ForceSelection(true)
                                                                                    .HQColumnShow("Descr")
                                                                                    .DisplayField("Descr")
                                                                                    .ValueField("Code")
                                                                                    .HQHeightWidth(400, 300)
                                                                    .HQParam(new StoreParameterCollection() {
                                                                                new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw}
                                                            })
                                    .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                                    .Listeners(lst =>
                                        {
                                            lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                                            lst.Expand.Fn = "PopupwinDetail.cboCode_expand";
                                        })
                                    .LoadData()
                                )

                , X.Column().DataIndex("Descr").Text(Util.GetLangJS("GiftName")).Width(120)
                    .Editor(Html.X().TextField().MaxLength(1))

                , X.NumberColumn().Format("##,###").DataIndex("Qty").Text(Util.GetLangJS("Qty")).Width(100).Align(Alignment.Right).StyleSpec("text-align:right")
                .Editor(Html.X().NumberField().MaxValue(10000).MinValue(0).DecimalPrecision(0))

            )
            .SelectionModel(Html.X().RowSelectionModel().ID("smlDetail").Mode(SelectionMode.Single))
            .Plugins(
                X.CellEditing()
                .ClicksToEdit(1)
                .Listeners(ls =>
                {
                    ls.BeforeEdit.Fn = "PopupwinDetail.grdDetail_beforeEdit";
                    ls.ValidateEdit.Fn = "PopupwinDetail.grdDetail_validateEdit";
                })
            )
            .View(X.GridView().TrackOver(false).GetRowClass(p => p.Fn = "PopupwinDetail.grdDetail_RowClass"))
        )
) 
@(
 X.Window()
    .ID("winRewardAmt")
    .Hidden(true)
    .Layout(LayoutType.Anchor)
    .Height(400)
    .Width(600)
    .MinHeight(100)
    .MinWidth(150)
    .Modal(true)
    .Closable(true)
    .Buttons(
        X.Button().ID("btnRewardExit").Text(Util.GetLangJS("Exit"))
        .Listeners(p => p.Click.Handler = "App.winRewardAmt.close()")

        , X.Button().ID("btnRewardOK").Text(Util.GetLangJS("OK"))
        .Listeners(p => p.Click.Fn = "PopupwinReward.btnRewardOK_Click")
    )
    .Items(
        X.GridPanel().ID("grdRewardAmt").MarginSpec("5 0 5 0")
        .Border(true).BorderSpec("1 0 0 0").Anchor("100% -25")
        .Store(
            X.Store()
                .ID("stoRewardAmt")
            .PageSize(50)
            .Model(Util.GenerateModel(typeof(OM10100_pgRewardAmt_Result), "mdlRewardAmt", ""))
            .Parameters(ps =>
            {                
                ps.Add(new StoreParameter("branchID", "App.txtBranchID.getValue()", ParameterMode.Raw));
                ps.Add(new StoreParameter("slsperID", "App.cboSlsPerID.getValue()", ParameterMode.Raw));
                ps.Add(new StoreParameter("custID", "App.cboCustID.getValue()", ParameterMode.Raw));
                ps.Add(new StoreParameter("displayIDs", "_displayIDs", ParameterMode.Raw));
            })
            .ServerProxy(X.AjaxProxy().Url(Url.Action("GetRewardAmt"))).AutoLoad(false)
            .Listeners(l =>
            {
                l.BeforeLoad.Handler = "App.grdOrdDet.view.loadMask.disable();";
                l.Load.Fn = "PopupwinReward.stoRewardAmt_Load";
                //l.Update.Fn = "frmChange";
            })
        )
        .ColumnModel(
            X.RowNumbererColumn()

            , X.CheckColumn().DataIndex("Selected").Text("").Width(40).Editable(true).Align(Alignment.Center)//Util.GetLangJS("Selected")
            , X.Column().DataIndex("DisplayID").Text(Util.GetLangJS("DisplayID"))
            , X.Column().DataIndex("Descr").Text(Util.GetLangJS("Descr")).MinWidth(150).Flex(1)
            , X.NumberColumn().DataIndex("RewardAmt").Text(Util.GetLangJS("RewardAmt")).Format("0,000").Align(Alignment.Right).StyleSpec("text-align:right")
        )
        .SelectionModel(Html.X().RowSelectionModel().ID("smlRewardAmt").Mode(SelectionMode.Single))
        .View(X.GridView().TrackOver(false))
        .Plugins(
            X.CellEditing()
            .ClicksToEdit(1)
            .Listeners(ls =>
            {
                ls.BeforeEdit.Fn = "PopupwinReward.grdRewardAmt_beforeEdit";

            })
        )
        .Features(
            X.GridFilters()
            .Local(true)
            .Filters(
                X.BooleanFilter().DataIndex("Selected"),
                X.StringFilter().DataIndex("Descr"),
                X.StringFilter().DataIndex("DisplayID"),
                X.NumericFilter().DataIndex("RewardAmt")

            )
        )
    )
)



@(
    X.Window().ID("winCustID").Title(Util.GetLangJS("SearchCustID")).Hidden(true)
    .DefaultButton("btnSearch")
    .Resizable(true).Maximizable(false).Maximized(true).Width(350).Height(350)
    .Layout(LayoutType.Fit)
    .Items(
        X.FormPanel()
        .Layout(LayoutType.Border)
        .FieldDefaults(act => { act.LabelAlign = LabelAlign.Right; act.LabelWidth = 150; })
        .Items(            
            X.Container().Layout(LayoutType.VBox).MarginSpec("5 0 0 0").Region(Region.North)
            .Items(
                     HQ.Combo().ID("cboState").Name("State").HQLangCodeJS("State")//.Hidden(true)
                        .HQProcedure("OM10100_pcState").HQColumnShow("Code,Descr")
                        .DisplayField("Descr").ValueField("Code")
                        .LabelWidth(130).Width(300).HQHeightWidth(400, 300)
                        .BlankText(Util.GetLangPrefix("Input","State"))
                        .HQParam(new StoreParameterCollection(){
                                new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@Username", Value = "HQ.userName", Mode = ParameterMode.Raw },                        
                                new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }                        
                        })
                        .ForceSelection(true)   
                        .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                        .Listeners(lst => { 
                            lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}";
                            lst.Change.Handler = "App.cboDistrict.store.reload();";
                        })
                        .LoadData()
                        
                     , HQ.Combo().ID("cboDistrict").Name("District").HQLangCodeJS("District")//.Hidden(true)
                        .HQProcedure("OM10100_pcDistrict").HQColumnShow("Code,Descr")
                        .DisplayField("Descr").ValueField("Code")
                        .LabelWidth(130).Width(300).HQHeightWidth(400, 300)
                        .BlankText(Util.GetLangPrefix("Input","District"))
                        .HQParam(new StoreParameterCollection(){
                                new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@Username", Value = "HQ.userName", Mode = ParameterMode.Raw },                        
                                new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw },     
                                new StoreParameter() { Name = "@State", Value = "App.cboState.getValue()", Mode = ParameterMode.Raw}                   
                        })
                        .ForceSelection(true)   
                        .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                        .Listeners(lst => { lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}"; })
                        .LoadData()   
                        
                    ,HQ.Combo().ID("cboClass").Name("Class").HQLangCodeJS("Class")
                        .HQProcedure("OM10100_pcClass").HQColumnShow("Code,Descr")
                        .DisplayField("Descr").ValueField("Code")
                        .LabelWidth(130).Width(300).HQHeightWidth(400, 300)
                        .BlankText(Util.GetLangPrefix("Input","Class"))
                        .HQParam(new StoreParameterCollection(){
                                new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@Username", Value = "HQ.userName", Mode = ParameterMode.Raw },                        
                                new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw }                        
                        })
                        .ForceSelection(true)      
                        .Triggers(new FieldTrigger() { Icon = TriggerIcon.Clear, HideTrigger = false })
                        .Listeners(lst => { lst.TriggerClick.Handler = "if (index == 0) { this.clearValue();}"; })     
                        .LoadData()
                        
                    ,X.Container().Layout(LayoutType.HBox).Items(
                        HQ.TextBox().ID("txtKeySearch").HQLangCodeJS("OM1010KeySearch").LabelWidth(130).Width(300).LabelAlign(LabelAlign.Right)
                        ,HQ.Button().ID("btnSearch").Icon(Icon.ArrowRefresh).HQLangCodeJS("Search").MinWidth(100).Listeners(p => p.Click.Fn = "btnSearch_Click").MarginSpec("0 0 0 5")
                    )
                )
                ,X.Container().Region(Region.Center).Layout(LayoutType.Fit).MarginSpec("5 0 0 0")
                .Items(
                        HQ.GridPanel().ID("grdCustID").Layout(LayoutType.Fit).HQAutoLoad(false)
                        .HQPageSize(50).HQProcedure("OM10100_pgCust").HQColumnShow("CustID,CustName,Addr1,Addr2,Terms,State,District").HQIDProperty("CustID")     
                        .HQisPaging(true)   
                        .HQColumnRowNumber(true)                
                        .HQParam(new StoreParameterCollection(){
                                new StoreParameter() { Name = "@CpnyID", Value = "HQ.cpnyID", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@Username", Value = "HQ.userName", Mode = ParameterMode.Raw },                        
                                new StoreParameter() { Name = "@LangID", Value = "HQ.langID", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@BranchID", Value = "App.txtBranchID.getValue()", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@State", Value = "App.cboState.getValue()", Mode = ParameterMode.Raw }, 
                                new StoreParameter() { Name = "@District", Value = "App.cboDistrict.getValue()", Mode = ParameterMode.Raw },                    
                                new StoreParameter() { Name = "@ClassID", Value = "App.cboClass.getValue()", Mode = ParameterMode.Raw },
                                new StoreParameter() { Name = "@KeySearch", Value = "App.txtKeySearch.getValue()", Mode = ParameterMode.Raw }                        
                        })
                        .LoadData()
                        .SelectionModel(
                            X.CheckboxSelectionModel().Mode(SelectionMode.Single).ShowHeaderCheckbox(false)
                        )
                        .Listeners(l=>l.CellDblClick.Fn="grdCustID_CellDblClick")                    
                        .BottomBar(
                        X.PagingToolbar()
                        .Items(
                            X.Label(Util.GetLangJS("PageSize")),
                            X.ToolbarSpacer(10),
                            X.ComboBox()
                            .Width(80)
                            .Items("1", "2", "10", "20", "30", "50")
                            .SelectedItems("50")
                            .Listeners(l =>
                            {
                                l.Select.Fn = "HQ.grid.onPageSelect";
                            })
                        ).HideRefresh(true)
                        .Plugins(X.ProgressBarPager())
                        
                    )
                )                       
        )
    )
   
)
